# den0<-function(x){
# exp(-((sigma0*(x-mu0))^2)^alpha0)
# }
# den0.nc<-integrate(den0,lower=0,upper=1)[[1]]
# den01<-function(x,y){
#   exp(-(((sigma0*(x-mu0))^2)^alpha0))*exp(-((sigma1*(y-(x+delta1)))^2)^alpha1)
# }
# den01.nc<-int2(den01,a=c(0,0),b=c(1,1))
rm(list = ls())
require("rmutil")
sigma<-10
delta<-0.2
alpha<-15
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
y1.x<-100
y0.x<-100
y1.y<-100
y0.y<-100
posterior<-function(x,y){
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.nc<-int2(posterior,a=c(0,0),b=c(1,1))[[1]]
posterior.x<-function(x,y){
x*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.y<-function(x,y){
y*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
int2(posterior.x,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
int2(posterior.y,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
# sigma0 <- 3.5
# mu0    <- 0.50
# alpha0 <- 20
# sigma1 <- 7
# alpha1 <- 15
# delta1 <- 0.00
# den0<-function(x){
# exp(-((sigma0*(x-mu0))^2)^alpha0)
# }
# den0.nc<-integrate(den0,lower=0,upper=1)[[1]]
# den01<-function(x,y){
#   exp(-(((sigma0*(x-mu0))^2)^alpha0))*exp(-((sigma1*(y-(x+delta1)))^2)^alpha1)
# }
# den01.nc<-int2(den01,a=c(0,0),b=c(1,1))
install.packages("akima")
require("akima")
x<-seq(0,1,n=1000)
x<-seq(0,1,length=1000)
y<-seq(0,1,length=1000)
crossprod(x,y)
fdejong <- function (x, y) {
return (x^2 + y^2)
}
x <- seq(-10, 10, length= 30)
y <- x
z <- outer(x, y, fdejong)
z[is.na(z)] <- 1
require(lattice)
rm(list = ls())
require(rmutil)
require(lattice)
x <- seq(-10, 10, length= 30)
y <- x
z <- outer(x, y, fdejong)
z[is.na(z)] <- 1
wireframe(z, drape=T, col.regions=rainbow(100))
fdejong <- function (x, y) {
return (x^2 + y^2)
}
x <- seq(-10, 10, length= 30)
y <- x
z <- outer(x, y, fdejong)
z[is.na(z)] <- 1
wireframe(z, drape=T, col.regions=rainbow(100))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, fdejong)
z[is.na(z)] <- 1
wireframe(z, drape=T, col.regions=rainbow(100))
sigma<-10
delta<-0.2
alpha<-15
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-10
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-1
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-2
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
y1.x<-100
y0.x<-100
y1.y<-100
y0.y<-100
posterior<-function(x,y){
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.nc<-int2(posterior,a=c(0,0),b=c(1,1))[[1]]
posterior.x<-function(x,y){
x*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.y<-function(x,y){
y*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
int2(posterior.x,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
int2(posterior.y,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
# sigma0 <- 3.5
# mu0    <- 0.50
# alpha0 <- 20
# sigma1 <- 7
# alpha1 <- 15
# delta1 <- 0.00
# den0<-function(x){
# exp(-((sigma0*(x-mu0))^2)^alpha0)
# }
# den0.nc<-integrate(den0,lower=0,upper=1)[[1]]
# den01<-function(x,y){
#   exp(-(((sigma0*(x-mu0))^2)^alpha0))*exp(-((sigma1*(y-(x+delta1)))^2)^alpha1)
# }
# den01.nc<-int2(den01,a=c(0,0),b=c(1,1))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
y1.x<-5
y0.x<-5
y1.y<-5
y0.y<-5
posterior<-function(x,y){
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.nc<-int2(posterior,a=c(0,0),b=c(1,1))[[1]]
posterior.x<-function(x,y){
x*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.y<-function(x,y){
y*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
int2(posterior.x,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
int2(posterior.y,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
y1.x<-10
y0.x<-10
y1.y<-10
y0.y<-10
posterior<-function(x,y){
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.nc<-int2(posterior,a=c(0,0),b=c(1,1))[[1]]
posterior.x<-function(x,y){
x*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.y<-function(x,y){
y*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
int2(posterior.x,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
int2(posterior.y,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
y1.x<-15
y0.x<-15
y1.y<-15
y0.y<-15
posterior<-function(x,y){
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.nc<-int2(posterior,a=c(0,0),b=c(1,1))[[1]]
posterior.x<-function(x,y){
x*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.y<-function(x,y){
y*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
int2(posterior.x,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
int2(posterior.y,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
y1.x<-20
y0.x<-20
y1.y<-20
y0.y<-20
posterior<-function(x,y){
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.nc<-int2(posterior,a=c(0,0),b=c(1,1))[[1]]
posterior.x<-function(x,y){
x*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.y<-function(x,y){
y*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
int2(posterior.x,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
int2(posterior.y,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
y1.x<-30
y0.x<-30
y1.y<-30
y0.y<-30
posterior<-function(x,y){
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.nc<-int2(posterior,a=c(0,0),b=c(1,1))[[1]]
posterior.x<-function(x,y){
x*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
posterior.y<-function(x,y){
y*
exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
int2(posterior.x,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
int2(posterior.y,a=c(0,0),b=c(1,1))/posterior.nc[[1]]
responses.x<-rep(c(0,1),40)
responses.x
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta<-0.2
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta.enth<-0.2
delta.skpt<-0
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta.skpt))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
rm(list = ls())
require(rmutil)
require(lattice)
sigma<-4
delta.enth<-0.2
delta.skpt<-0
alpha<-2
denB<-function(x,y){
exp(-((sigma*((x-y)-delta.skpt))^2)^alpha)
}
denB.nc<-int2(denB,a=c(0,0),b=c(1,1))
x <- seq(0, 1, length= 100)
y <- x
z <- outer(x, y, denB)
wireframe(z, drape=T, col.regions=rainbow(100))
fun <- function(x, y) cos(x) * cos(y)
integral2(fun, 0, 1, 0, 1, reltol = 1e-10)
install.packages("pracma")
require(pracma)
fun <- function(x, y) cos(x) * cos(y)
integral2(fun, 0, 1, 0, 1, reltol = 1e-10)
##  Compute the volume of a sphere
f <- function(x, y) sqrt(1 -x^2 - y^2)
xmin <- 0; xmax <- 1
ymin <- 0; ymax <- function(x) sqrt(1 - x^2)
I <- integral2(f, xmin, xmax, ymin, ymax)
I$Q                             # 0.5236076 - pi/6 => 8.800354e-06
I
integral2(f, xmin, xmax, ymin, ymax)
##  Integrate 1/( sqrt(x + y)*(1 + x + y)^2 ) over the triangle
##   0 <= x <= 1, 0 <= y <= 1 - x.  The integrand is infinite at (0,0).
f <- function(x,y) 1/( sqrt(x + y) * (1 + x + y)^2 )
ymax <- function(x) 1 - x
I <- integral2(f, 0,1, 0,ymax)
integral2(f, 0,1, 0,ymax)
f <-function(x,y) 1
f(3,3)
integral2(f,0,1,0,x)
ymax<-function(x) x
integral2(f,0,1,0,ymax)
posterior.skpt<-function(x,y){exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta.skpt))^2)^alpha)}
posterior.skpt.nc<-int2(posterior.skpt,a=c(0,0),b=c(1,1))[[1]]
y1.x<-30
y0.x<-30
y1.y<-30
y0.y<-30
y1.x<-30
y0.x<-30
y1.y<-30
y0.y<-30
posterior.skpt<-function(x,y){exp(y1.x*log(x)+y0.x*log(1-x))*
exp(y1.y*log(y)+y0.y*log(1-y))*
exp(-((sigma*((x-y)-delta.skpt))^2)^alpha)}
posterior.skpt.nc<-int2(posterior.skpt,a=c(0,0),b=c(1,1))[[1]]
integral2(posterior.skpt,xmin=0,xmax=0,ymin=0,ymax=0)/posterior.skpt.nc
integral2(posterior.skpt,xmin=0,xmax=0,ymin=0,ymax=0)
integral2(f,xmin=0,xmax=0,ymin=0,ymax=0)
integral2(f,xmin=0,xmax=1,ymin=0,ymax=1)/posterior.skpt.nc
integral2(f,xmin=0,xmax=1,ymin=0,ymax=1)
posterior.skpt.nc
integral2(posterior.skpt,xmin=0,xmax=1,ymin=0,ymax=1)
integral2(posterior.skpt,xmin=0,xmax=1,ymin=0,ymax=1)/posterior.skpt.nc
a<-integral2(posterior.skpt,xmin=0,xmax=1,ymin=0,ymax=1)
b<-posterior.skpt.nc
a/b
a
a[[1]]
integral2(posterior.skpt,xmin=0,xmax=1,ymin=0,ymax=1)[[1]]/posterior.skpt.nc
ymax <- function(x) 1 - x
integral2(posterior.skpt,xmin=0.1,xmax=1,ymin=0,ymax)
integral2(posterior.skpt,xmin=0.1,xmax=1,ymin=0,ymax)/posterior.skpt.nc
integral2(posterior.skpt,xmin=0.1,xmax=1,ymin=0,ymax)[[1]]/posterior.skpt.nc
ymax <- function(x) x
integral2(posterior.skpt,xmin=0.1,xmax=1,ymin=0,ymax)[[1]]/posterior.skpt.nc
ymax <- function(x) x-0.1
integral2(posterior.skpt,xmin=0.1,xmax=1,ymin=0,ymax)[[1]]/posterior.skpt.nc
