model<-expand.grid(seq(p.skpt,p.enth,by=0.01),0,0,2,1,4)
names(model)<-c("p.range","prior_indicator_skpt","prior_indicator_enth",
"freq.mntr","enr.shape","out.mean")
write.csv(model,file="simulation_args.csv")
#freq.mntr<-rep(c(1,2,4,8,16,76),2)     # frequency of monitoring
#enr.shape<-c(rep(1,6),rep(0.25,6))      # shape gamma dist enrollment
#out.mean<-c(rep(4,12))       # mean normal dist outcome
get.wd()
getwd()
write.csv(model,file="simulation_args.csv")
model<-expand.grid(seq(p.skpt,p.enth,by=0.01),0,0,2,1,4)
names(model)<-c("p.range","prior_indicator_skpt","prior_indicator_enth",
"freq.mntr","enr.shape","out.mean")
write.csv(model,file="simulation_args.csv")
model<-expand.grid(seq(p.skpt,p.enth,by=0.01),0,0,2,1,4)
names(model)<-c("p.range","prior_indicator_skpt","prior_indicator_enth",
"freq.mntr","enr.shape","out.mean")
write.csv(model,file="simulation_args.csv")
model<-expand.grid(seq(p.skpt,p.enth,by=0.01),0,0,2,1,4)
p.skpt<-0.40     # response rate for skeptic, enthusiast, futility
p.enth<-0.67
p.intr<-(p.skpt+p.enth)/2
tail.skpt<-0.025  # tail probabilities for priors
tail.enth<-0.025
cred.tail<-0.05
sig.fut<-0.975
sig.eff<-0.975
epsilon<-0 # used to stop numerical error from integration
max.ss<-112
reps<-10000
model<-expand.grid(seq(p.skpt,p.enth,by=0.01),0,0,2,1,4)
names(model)<-c("p.range","prior_indicator_skpt","prior_indicator_enth",
"freq.mntr","enr.shape","out.mean")
write.csv(model,file="simulation_args.csv")
#freq.mntr<-rep(c(1,2,4,8,16,76),2)     # frequency of monitoring
#enr.shape<-c(rep(1,6),rep(0.25,6))      # shape gamma dist enrollment
#out.mean<-c(rep(4,12))       # mean normal dist outcome
rm(list = ls())
for (idx in 1:28){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
write.csv(outer,file=paste0("output/",idx,"Table1.csv"))
write.csv(outer.p,file=paste0("output/",idx,"Table2.csv"))
write.csv(outer.p.agree,file=paste0("output/",idx,"Table3.csv"))
}
getwd()
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/output")
getwd()
list.files()
file_list <- list.files()
file_list
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)[,2]}))
dataset
row.names(dataset)<-read.csv("1Table1.csv")[,1]
colnames(dataset)<-gsub("Table1.csv", "", file_list)
dataset
View(dataset)
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/output")
file_list <- list.files()
file_list
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)[,2]}))
dataset
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)[,2]}))
temp<-read.csv(file_list[1])
temp
temp2<-read.csv(file_list[2])
temp2
rbind(temp1,temp2)
rbind(temp,temp2)
cbind(temp,temp2)
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=FALSE)[,2]}))
dataset
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)[,2]}))
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)}))
dataset
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=FALSE)}))
file_list
dataset
dataset <- do.call("cbind",lapply(file_list,
FUN=function(files){read.csv(files, header=FALSE)}))
dataset <- do.call("cbind",
lapply(file_list,FUN=function(files){read.csv(files, header=FALSE)}))
dataset
?write.csv
rm(list = ls())
for (idx in 1:5){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
write.csv(outer,file=paste0("output/",idx,"Table1.csv"),col.names=NA)
#write.csv(outer.p,file=paste0("output/",idx,"Table2.csv"))
#write.csv(outer.p.agree,file=paste0("output/",idx,"Table3.csv"))
}
rm(list = ls())
for (idx in 1:5){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
write.csv(outer,file=paste0("output/",idx,"Table1.csv"),col.names=FALSE)
#write.csv(outer.p,file=paste0("output/",idx,"Table2.csv"))
#write.csv(outer.p.agree,file=paste0("output/",idx,"Table3.csv"))
}
outer
outer.p.agree
write.csv(outer,file=paste0("output/",idx,"Table1.csv"),col.names=FALSE)
write.csv(outer,file=paste0("output/",idx,"Table1.csv"))
outer
data.table(outer)
as.table(outer)
outer
outer[,,]
write.csv(outer[,,],file=paste0("output/",idx,"Table1.csv"))
?write.csv
write.csv(outer[,,],file=paste0("output/",idx,"Table1.csv"),col.names=NA)
write.csv(outer[,,],file=paste0("output/",idx,"Table1.csv"),col.names=NA)
write.csv(outer[,,],file=paste0("output/",idx,"Table1.csv"))
rm(list = ls())
for (idx in 1:5){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
write.csv(outer[,,],file=paste0("output/",idx,"Table1.csv"))
#write.csv(outer.p,file=paste0("output/",idx,"Table2.csv"))
#write.csv(outer.p.agree,file=paste0("output/",idx,"Table3.csv"))
}
rm(list = ls())
for (idx in 1:28){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
write.csv(outer[,,],file=paste0("output/",idx,"Table1.csv"))
#write.csv(outer.p,file=paste0("output/",idx,"Table2.csv"))
#write.csv(outer.p.agree,file=paste0("output/",idx,"Table3.csv"))
}
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/output")
file_list <- list.files()
dataset <- do.call("cbind",
lapply(file_list,FUN=function(files){read.csv(files, header=FALSE)}))
row.names(dataset)<-read.csv("1Table1.csv")[,1]
colnames(dataset)<-gsub("Table1.csv", "", file_list)
dataset
temp<-read.csv(file_list[1])
temp2<-read.csv(file_list[2])
temp
temp2
rbind(temp,temp2)
cbind(temp,temp2)
?read.csv
dataset <- do.call("cbind", lapply(file_list,
FUN=function(files){read.csv(files, header=FALSE, row.names=TRUE)}))
temp<-read.csv(file_list[1])
temp1<-read.csv(file_list[1])
temp2<-read.csv(file_list[2])
temp1
temp2
read.csv
outer[,,]
t(outer[,,])
rm(list = ls())
for (idx in 1:28){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
write.csv(t(outer[,,]),file=paste0("output/",idx,"Table1.csv"))
#write.csv(outer.p,file=paste0("output/",idx,"Table2.csv"))
#write.csv(outer.p.agree,file=paste0("output/",idx,"Table3.csv"))
}
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/output")
file_list <- list.files()
dataset <- do.call("cbind", lapply(file_list,
FUN=function(files){read.csv(files, header=FALSE, row.names=TRUE)}))
row.names(dataset)<-read.csv("1Table1.csv")[,1]
colnames(dataset)<-gsub("Table1.csv", "", file_list)
dataset <- do.call("cbind", lapply(file_list,
FUN=function(files){read.csv(files, header=FALSE)}))
dataset
temp1<-read.csv(file_list[1])
temp2<-read.csv(file_list[2])
dataset <- do.call("cbind", lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)}))
temp1<-read.csv(file_list[1])
temp2<-read.csv(file_list[2])
temp1
temp2
rbind(temp1,temp2)
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/output")
file_list <- list.files()
dataset <- do.call("rbind", lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)}))
dataset
dataset
colnames(dataset)
outer[,,]
cbind(idx,outer[,,])
rbind(idx,outer[,,])
ls
rbind(c("idx",idx),outer[,,])
idx
cbind(c("idx",idx),outer[,,])
rbind(c("idx",idx),outer[,,])
rbind(t(c("idx",idx)),outer[,,])
rbind(as.matrix(c("idx",idx)),outer[,,])
rbind(data.frame(c("idx",idx)),outer[,,])
outer[,,]
outer[,,]
outer[,,]$idx<-idx
idx
outer[,,]$idx
outer[,,]$ss.final
outer[,,]
outer[,,"cov.final"]
outer[,,"idx"]<-idx
data.frame(outer[,,])
data.frame(outer[,,])
cbind(data.frame(outer[,,]),c("idx",idx))
rbind(data.frame(outer[,,]),c("idx",idx))
evan<-rbind(data.frame(outer[,,])
evan<-rbind(data.frame(outer[,,]))
evan<-rbind(data.frame(outer[,,]))
evan
evan$idx<-idx
evan
evan<-data.frame(outer[,,])
evan
evan<-data.frame(t(outer[,,]))
evan
evan$idx<-idx
evan
p.range
rm(list = ls())
for (idx in 1:28){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
Table1<-data.frame(t(outer[,,]))
Table1$p.range<-p.range
write.csv(Table1,file=paste0("output/",idx,"Table1.csv"))
#write.csv(outer.p,file=paste0("output/",idx,"Table2.csv"))
#write.csv(outer.p.agree,file=paste0("output/",idx,"Table3.csv"))
}
evan<-data.frame(t(outer[,,]))
a
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/output")
file_list <- list.files()
dataset <- do.call("rbind", lapply(file_list,
FUN=function(files){read.csv(files, header=TRUE)}))
dataset
outer.p[,,]
rm(list = ls())
for (idx in 1:28){
if (.Platform$OS.type == "unix"){
args<-commandArgs(trailingOnly = TRUE)
idx<-as.numeric(args[1])}
if (.Platform$OS.type == "windows") {
root<-"D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES"
setwd(root)}
source("functions/functions.R")
source("args/model_args.R")
simulation_args<-read.csv(file="args/simulation_args.csv",header=TRUE,sep=",")
# using idx to identify model
p.range<-simulation_args$p.range[idx]
freq.mntr<-simulation_args$freq.mntr[idx]
enr.shape<-simulation_args$enr.shape[idx]
out.mean<-simulation_args$out.mean[idx]
if (simulation_args$prior_indicator_skpt[idx]==0){prior.nc.skpt<-skpt_prior_default()}
if (simulation_args$prior_indicator_skpt[idx]==1){prior.nc.skpt<-skpt_prior_custom(scale=1.15)}
if (simulation_args$prior_indicator_enth[idx]==0){prior.nc.enth<-enth_prior_default()}
if (simulation_args$prior_indicator_enth[idx]==1){prior.nc.enth<-enth_prior_custom(scale=0.85)}
source("scripts/code_main.R")
Table1<-data.frame(t(outer[,,]))
Table1$p.range<-p.range
write.csv(Table1,file=paste0("output/Table1/",idx,"Table1.csv"))
Table2<-data.frame(t(outer.p[,,]))
Table2$p.range<-p.range
write.csv(Table2,file=paste0("output/Table2/",idx,"Table2.csv"))
Table3<-data.frame(t(outer.p.agree[,,]))
Table3$p.range<-p.range
write.csv(Table3,file=paste0("output/Table3/",idx,"Table3.csv"))
}
getwd()
file_list <- list.files("output/Table1"")
)
1+3
3
()
)
)
]
3
d
""
file_list <- list.files("output/Table1")
file_list
dataset <- do.call("rbind", lapply(file_list,FUN=function(files){read.csv(files, header=TRUE)}))
dataset <- do.call("rbind", lapply(file_list,FUN=function(files){read.csv(files, header=TRUE)}))
dataset <- do.call("rbind", lapply(file_list,FUN=function(files)
{read.csv(paste0("output/Table1/",files), header=TRUE)}))
dataset
write.csv(dataset,file="latex/Table1_merged.csv")
for table in c("Table1","Table2","Table3"){
print(table)
}
for (table in c("Table1","Table2","Table3")){
print(table)
}
for (table in c("Table1","Table2","Table3")){
file_list <- list.files(paste0("output/",table))
dataset <- do.call("rbind", lapply(file_list,FUN=function(files){read.csv(paste0("output/",table,"/",files), header=TRUE)}))
write.csv(dataset,file=paste0("latex/",table,"_merged.csv"))
}
file_list
for (table in c("Table1","Table2","Table3")){
file_list <- list.files(paste0("output/",table))
dataset <- do.call("rbind", lapply(file_list,FUN=function(files){read.csv(paste0("output/",table,"/",files), header=TRUE)}))
write.csv(dataset,file=paste0("output/",table,"_merged.csv"))
}
