source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
# Efficacy example
n<-c(0,8,16,19)
y1<-c(0,4,9,11)
miss<-c(0,11,3,0)
y0=n-y1
stretch<-1.5
source("plots_violin.R")
plot1 <- ggplot_gtable(ggplot_build(p))
plot1$layout$clip[plot1$layout$name == "panel"] <- "off"
# Futility example
n<-   c(0,8,16,24,32,40)
y1<-  c(0,1,2, 5, 5,8)
miss<-c(0,6,4, 13,8,0)
y0=n-y1
stretch<-2.5 # "Sample Size" labels xlim
source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
# Efficacy example
n<-c(0,8,16,19)
y1<-c(0,4,9,11)
miss<-c(0,11,3,0)
y0=n-y1
stretch<-1.5
source("plots_violin.R")
plot1 <- ggplot_gtable(ggplot_build(p))
plot1$layout$clip[plot1$layout$name == "panel"] <- "off"
# Futility example
n<-   c(0,8,16,24,32,40)
y1<-  c(0,1,2, 5, 5,8)
miss<-c(0,6,4, 13,8,0)
y0=n-y1
stretch<-2.5 # "Sample Size" labels xlim
source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
# Efficacy example
n<-c(0,8,16,19)
y1<-c(0,4,9,11)
miss<-c(0,11,3,0)
y0=n-y1
stretch<-1.5
source("plots_violin.R")
plot1 <- ggplot_gtable(ggplot_build(p))
plot1$layout$clip[plot1$layout$name == "panel"] <- "off"
# Futility example
n<-   c(0,8,16,24,32,40)
y1<-  c(0,1,2, 5, 5,8)
miss<-c(0,6,4, 13,8,0)
y0=n-y1
stretch<-2.5 # "Sample Size" labels xlim
source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
1+1
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
# Efficacy example
n<-c(0,8,16,19)
y1<-c(0,4,9,11)
miss<-c(0,11,3,0)
y0=n-y1
stretch<-1.5
source("plots_violin.R")
plot1 <- ggplot_gtable(ggplot_build(p))
plot1$layout$clip[plot1$layout$name == "panel"] <- "off"
# Futility example
n<-   c(0,8,16,24,32,40)
y1<-  c(0,1,2, 5, 5,8)
miss<-c(0,6,4, 13,8,0)
y0=n-y1
stretch<-2.5 # "Sample Size" labels xlim
source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
library(ggplot2)
library(gridExtra)
library(grid)
my_fun <- function(id){
ggplot() + ggtitle(paste(id, "hours-feed"))
}
pl <- lapply(seq_len(10), my_fun)
lg <- tableGrob(c("", "26ppm", "39ppm"), theme= ttheme_minimal())
rg <- arrangeGrob(grobs = pl, ncol=5,
top = textGrob("Fish 11 - feed",gp=gpar(fontsize=18)))
grid.newpage()
grid.draw(cbind(lg, rg, size = "last"))
pl
library(ggplot2)
library(gridExtra)
library(grid)
my_fun <- function(id){
ggplot() + ggtitle(paste(id, "hours-feed"))
}
# 10 different ggplot objects
pl <- lapply(seq_len(10), my_fun)
lg <- tableGrob(c("", "26ppm", "39ppm"), theme= ttheme_minimal())
rg <- arrangeGrob(grobs = pl, ncol=5,
top = textGrob("Fish 11 - feed",gp=gpar(fontsize=18)))
grid.newpage()
grid.draw(cbind(lg, rg, size = "last"))
library(grid)
d <- head(iris, 3)
g <- tableGrob(d)
grid.newpage()
grid.draw(g)
# }
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
# Efficacy example
n<-c(0,8,16,19)
y1<-c(0,4,9,11)
miss<-c(0,11,3,0)
y0=n-y1
stretch<-1.5
source("plots_violin.R")
plot1 <- ggplot_gtable(ggplot_build(p))
plot1$layout$clip[plot1$layout$name == "panel"] <- "off"
# Futility example
n<-   c(0,8,16,24,32,40)
y1<-  c(0,1,2, 5, 5,8)
miss<-c(0,6,4, 13,8,0)
y0=n-y1
stretch<-2.5 # "Sample Size" labels xlim
source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# plot side-by-side
grid.arrange(plot1,plot2,ncol=2)
# Efficacy example
n<-c(0,8,16,19)
y1<-c(0,4,9,11)
miss<-c(0,11,3,0)
y0=n-y1
stretch<-1.5
source("plots_violin.R")
plot1 <- ggplot_gtable(ggplot_build(p))
plot1$layout$clip[plot1$layout$name == "panel"] <- "off"
grid.arrange(plot1,ncol=1)
grid.arrange(plot1,ncol=1)
grid.arrange(plot1,ncol=1)
# Futility example
n<-   c(0,8,16,24,32,40)
y1<-  c(0,1,2, 5, 5,8)
miss<-c(0,6,4, 13,8,0)
y0=n-y1
stretch<-2.5 # "Sample Size" labels xlim
source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
grid.arrange(plot2,ncol=1)
# Futility example
n<-   c(0,8,16,24,32,40)
y1<-  c(0,1,2, 5, 5,8)
miss<-c(0,6,4, 13,8,0)
y0=n-y1
stretch<-2.5 # "Sample Size" labels xlim
source("plots_violin.R")
plot2 <- ggplot_gtable(ggplot_build(p))
plot2$layout$clip[plot2$layout$name == "panel"] <- "off"
grid.arrange(plot2,ncol=1)
grid.arrange(plot2,ncol=1)
grid.arrange(plot1,ncol=1)
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
lambda0.skpt<-0.95 # spike
lambda0.enth<-3 # regular
#lambda0.enth<-1.3 # spike
source("code_headers_gen_nrml.R")
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6),lwd=2)
lines(x,prior.nc.skpt(x),lty=2,col='darkgrey',lwd=2)
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6),lwd=2)
lines(x,prior.nc.skpt(x),lty=2,col='darkgrey',lwd=2)
plot(x,dbeta(x,alpha.enth,beta.enth),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6))
lines(x,prior.nc.enth(x),lty='longdash')
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
lambda0.skpt<-0.95 # spike
lambda0.enth<-3 # regular
#lambda0.enth<-1.3 # spike
source("code_headers_gen_nrml.R")
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6),lwd=2)
lines(x,prior.nc.skpt(x),lty=2,col='darkgrey',lwd=2)
plot(x,dbeta(x,alpha.enth,beta.enth),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6))
lines(x,prior.nc.enth(x),lty='longdash')
sig.fut<-0.85
sig.eff<-0.95
cred.tail<-0.05
max.ss<-76
reps<-10000
p.range<-seq(p.skpt,p.enth,by=0.1)
freq.mntr<-2
enr.shape<-1
out.mean<-4
spike<-1 # generalized normal priors
source("code_main.R")
outer
## define plot data
xlim <- c(0,1);
ylim <- c(0,1);
px <- c(0.2,0.3,0.4);
py <- c(0,0,0);
lx.buf <- 5;
lx<-c(0.1,0.3,0.5)
#lx <- seq(xlim[1]+lx.buf,xlim[2]-lx.buf,len=length(px));
ly <- 0.2;
## create basic plot outline
par(xaxs='i',yaxs='i',mar=c(5,1,1,1));
plot(NA,xlim=xlim,ylim=ylim,axes=F,ann=F);
axis(1);
library(latex2exp)
## plot elements
segments(px,py,lx,ly);
points(px,py,pch=16,xpd=NA);
text(lx,ly,labels=c(TeX('$\\theta_0$'),'$\\theta_I$'),TeX('$\\theta_A$')),pos=3);
## define plot data
xlim <- c(0,1);
ylim <- c(0,1);
px <- c(0.2,0.3,0.4);
py <- c(0,0,0);
lx.buf <- 5;
lx<-c(0.1,0.3,0.5)
#lx <- seq(xlim[1]+lx.buf,xlim[2]-lx.buf,len=length(px));
ly <- 0.2;
## create basic plot outline
par(xaxs='i',yaxs='i',mar=c(5,1,1,1));
plot(NA,xlim=xlim,ylim=ylim,axes=F,ann=F);
axis(1);
library(latex2exp)
## plot elements
segments(px,py,lx,ly);
points(px,py,pch=16,xpd=NA);
text(lx,ly,labels=c(TeX('$\\theta_0$'),'$\\theta_I$'),TeX('$\\theta_A$')),pos=3);
## define plot data
xlim <- c(0,1);
ylim <- c(0,1);
px <- c(0.2,0.3,0.4);
py <- c(0,0,0);
lx.buf <- 5;
lx<-c(0.1,0.3,0.5)
#lx <- seq(xlim[1]+lx.buf,xlim[2]-lx.buf,len=length(px));
ly <- 0.2;
## create basic plot outline
par(xaxs='i',yaxs='i',mar=c(5,1,1,1));
plot(NA,xlim=xlim,ylim=ylim,axes=F,ann=F);
axis(1);
library(latex2exp)
## plot elements
segments(px,py,lx,ly);
points(px,py,pch=16,xpd=NA);
text(lx,ly,labels=c(TeX('$\\theta_0$'),TeX('$\\theta_I$'),TeX('$\\theta_A$')),pos=3);
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
spike<-0 # spike/slab version or regular version
sig.fut<-0.85
sig.eff<-0.95
cred.tail<-0.05
max.ss<-76
reps<-1000
#p.range=0.2
p.range<-seq(p.skpt-0.05,p.enth+0.05,by=0.05) # range of response proportion
freq.mntr<-2
enr.shape<-1
out.mean<-4
#freq.mntr<-rep(c(1,2,4,8,16,76),2)     # frequency of monitoring
#enr.shape<-c(rep(1,6),rep(0.25,6))      # shape gamma dist enrollment
#out.mean<-c(rep(4,12))       # mean normal dist outcome
source("code_main.R")
label_main=""
stretch<-0.125
source("plots_seq_design_prop.R")
source("plots_seq_design_prop.R")
source("plots_seq_design_prop.R")
source("plots_seq_design_prop.R")
spike<-0 # spike/slab version or regular version
sig.fut<-0.85
sig.eff<-0.95
cred.tail<-0.05
max.ss<-76
reps<-20000
#p.range=0.2
p.range<-seq(p.skpt-0.05,p.enth+0.05,by=0.05) # range of response proportion
freq.mntr<-2
enr.shape<-1
out.mean<-4
#freq.mntr<-rep(c(1,2,4,8,16,76),2)     # frequency of monitoring
#enr.shape<-c(rep(1,6),rep(0.25,6))      # shape gamma dist enrollment
#out.mean<-c(rep(4,12))       # mean normal dist outcome
source("code_main.R")
label_main=""
stretch<-0.125
source("plots_seq_design_prop.R")
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors
tail.enth<-0.05
source("code_headers_beta.R")
lambda0.skpt<-0.95 # spike
lambda0.enth<-3 # regular
#lambda0.enth<-1.3 # spike
source("code_headers_gen_nrml.R")
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6),lwd=2)
lines(x,prior.nc.skpt(x),lty=2,col='darkgrey',lwd=2)
plot(x,dbeta(x,alpha.enth,beta.enth),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6))
lines(x,prior.nc.enth(x),lty='longdash')
#########################################################
### Plot beta and generalized normal REGULAR priors #####
#########################################################
par(mfrow = c(1, 2))
lambda0.skpt<-1.45 # regular
lambda0.enth<-3 # regular
source("code_headers_gen_nrml.R")
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6))
lines(x,prior.nc.skpt(x),lty='longdash')
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.enth,beta.enth),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6))
lines(x,prior.nc.enth(x),lty='longdash')
#########################################################
#########################################################
### Plot beta and generalized normal SKEPTICAL priors ###
#########################################################
lambda0.skpt<-0.95 # spike
lambda0.enth<-1.3 # spike
source("code_headers_gen_nrml.R")
par(mfrow = c(1, 1))
par(mar=c(5.1,4.1,4.1-2,2.1)) #bottom, left, top, and right.
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6),lwd=2)
lines(x,prior.nc.skpt(x),lty=2,col='darkgrey',lwd=2)
lambda0.skpt<-4 # flat
lambda0.enth<-5 # flat
source("code_headers_gen_nrml.R")
lines(x,prior.nc.skpt(x),lty=3,col="grey",lwd=2)
legend(0.6, 4, legend=c("Spike/Slab", "Default Beta","Flattened"),
col=c("darkgrey", "black", "grey"), lty=c(2,1,3), cex=0.8,lwd=2)
#########################################################
#########################################################
lambda0.skpt<-0.95 # spike
lambda0.enth<-1.3 # spike
source("code_headers_gen_nrml.R")
par(mfrow = c(1, 1))
par(mar=c(5.1,4.1,4.1-2,2.1)) #bottom, left, top, and right.
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,6),lwd=2)
lines(x,prior.nc.skpt(x),lty=2,col='darkgrey',lwd=2)
legend(0.6, 4, legend=c("Spike/Slab", "Default Beta"),
col=c("darkgrey", "black", "grey"), lty=c(2,1), cex=0.8,lwd=2)
#########################################################
#########################################################
### Plot beta and generalized normal ENTHUASTIC priors ##
#########################################################
lambda0.skpt<-0.95 # spike
lambda0.enth<-1.3 # spike
source("code_headers_gen_nrml.R")
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.enth,beta.enth),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,5),lwd=2)
lines(x,prior.nc.enth(x),lty='longdash',col='darkgrey',lwd=2)
lambda0.skpt<-4 # flat
lambda0.enth<-5 # flat
source("code_headers_gen_nrml.R")
lines(x,prior.nc.enth(x),lty=3,col="grey",lwd=2)
legend(0.6, 4*5/6, legend=c("Spike/Slab", "Default Beta","Flattened"),
col=c("darkgrey", "black", "grey"), lty=c(2,1,3), cex=0.8,lwd=2)
#########################################################
#########################################################
### Plot beta and generalized normal ENTHUASTIC priors ##
#########################################################
lambda0.skpt<-0.95 # spike
lambda0.enth<-1.3 # spike
source("code_headers_gen_nrml.R")
x<-seq(0,1,by=0.01)
plot(x,dbeta(x,alpha.enth,beta.enth),type="l",
xlab="Response Probability",ylab="Density Value",
ylim=c(0,5),lwd=2)
lines(x,prior.nc.enth(x),lty='longdash',col='darkgrey',lwd=2)
legend(0.6, 4*5/6, legend=c("Spike/Slab", "Default Beta"),
col=c("darkgrey", "black"), lty=c(2,1), cex=0.8,lwd=2)
#########################################################
