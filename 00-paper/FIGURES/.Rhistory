setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors (low, high)
tail.enth<-0.05
source("code_headers.R")
sig.fut<-0.85
sig.eff<-0.95
cred.tail<-0.05
max.ss<-76
reps<-10000
p.range<-0.20
#p.range<-seq(p.skpt-0.05,p.enth+0.05,by=0.05)
freq.mntr<-c(1,2,4,8,16,76)
enr.shape<-1
out.mean<-4
source("code_main_nested.R")
#### Type I error graphs ####
#c(bottom, left, top, right)
par(mar=c(5.1+4,4.1+2,2.1,2.1))
par(mfrow = c(1, 1))
k1<-c(4)
k2<-c(1)
plot(1/freq.mntr[out.mean==k1[1] & enr.shape==k2[1]],
outer[,,"eff.mon.initial"][out.mean==k1[1] & enr.shape==k2[1]],
type='l',ylim=c(0,.15),lwd=2,lty='longdash',
ylab="Type 1 Error Rate",xlab="",
main="",
axes=FALSE)
# horizontal lines
abline(h=seq(0,0.15,by=0.01),col='grey')
box()
for (i in length(k1)){
lines(1/freq.mntr[out.mean==k1[i] & enr.shape==k2[i]],
outer[,,"eff.mon.final"][out.mean==k1[i] & enr.shape==k2[i]],
lwd=2)
lines(1/freq.mntr[out.mean==k1[i] & enr.shape==k2[i]],
outer[,,"eff.mon.initial"][out.mean==k1[i] & enr.shape==k2[i]],
lty='longdash',lwd=2)
}
text(1/freq.mntr[out.mean==k1 & enr.shape==k2],
outer[,,"eff.mon.initial"][out.mean==k1 & enr.shape==k2],
labels=format(round(outer[,,"eff.mon.initial"][out.mean==k1 & enr.shape==k2],digits=3),
nsmall=3),pos=3)
text(1/freq.mntr[out.mean==k1 & enr.shape==k2],
outer[,,"eff.mon.final"][out.mean==k1 & enr.shape==k2],
labels=format(round(outer[,,"eff.mon.final"][out.mean==k1 & enr.shape==k2],digits=3),
nsmall=3),pos=1)
# yaxixs
axis(2,las=2,at=seq(0,.15,by=0.01),labels=format(seq(0,.15,by=0.01),nsmall=2))
# x axis
axis(1,las=0,at=1/freq.mntr[out.mean==k1 & enr.shape==k2],
labels=c("","","","","",""))
# manual x-axis
mtext(text=freq.mntr,side=1,line=1,at=1/freq.mntr[out.mean==k1 & enr.shape==k2])
# # sample size information
# mtext(text=paste0(format(round(
# outer[,,"ss.initial"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=2,at=1/freq.mntr)
# mtext(text=paste0(format(round(
# outer[,,"ss.final"][out.mean==k1 & enr.shape==k2]-
# outer[,,"ss.initial"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=3,at=1/freq.mntr)
# mtext(text=paste0(format(round(
# outer[,,"ss.final"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=4,at=1/freq.mntr)
#
#
#
# mtext(text="Monitor Freq",side=1,line=1,at=-0.05)
# mtext(text="SS Interim",side=1,line=2,at=-0.05)
# mtext(text="Follow-up",side=1,line=3,at=-0.05)
# mtext(text="SS Final",side=1,line=4,at=-0.05)
#### Type I error graphs ####
#c(bottom, left, top, right)
par(mar=c(5.1+4,4.1+2,2.1,2.1))
par(mfrow = c(1, 1))
k1<-c(4)
k2<-c(1)
plot(1/freq.mntr[out.mean==k1[1] & enr.shape==k2[1]],
outer[,,"eff.mon.initial"][out.mean==k1[1] & enr.shape==k2[1]],
type='l',ylim=c(0,.15),lwd=2,lty='longdash',
ylab="Type 1 Error Rate",xlab="",
main="",
axes=FALSE)
# horizontal lines
abline(h=seq(0,0.15,by=0.01),col='grey')
box()
for (i in length(k1)){
lines(1/freq.mntr[out.mean==k1[i] & enr.shape==k2[i]],
outer[,,"eff.mon.final"][out.mean==k1[i] & enr.shape==k2[i]],
lwd=2)
lines(1/freq.mntr[out.mean==k1[i] & enr.shape==k2[i]],
outer[,,"eff.mon.initial"][out.mean==k1[i] & enr.shape==k2[i]],
lty='longdash',lwd=2)
}
text(1/freq.mntr[out.mean==k1 & enr.shape==k2],
outer[,,"eff.mon.initial"][out.mean==k1 & enr.shape==k2],
labels=format(round(outer[,,"eff.mon.initial"][out.mean==k1 & enr.shape==k2],digits=3),
nsmall=3),pos=3)
text(1/freq.mntr[out.mean==k1 & enr.shape==k2],
outer[,,"eff.mon.final"][out.mean==k1 & enr.shape==k2],
labels=format(round(outer[,,"eff.mon.final"][out.mean==k1 & enr.shape==k2],digits=3),
nsmall=3),pos=1)
# yaxixs
axis(2,las=2,at=seq(0,.15,by=0.01),labels=format(seq(0,.15,by=0.01),nsmall=2))
# x axis
axis(1,las=0,at=1/freq.mntr[out.mean==k1 & enr.shape==k2],
labels=c("","","","","",""))
# manual x-axis
mtext(text=freq.mntr,side=1,line=1,at=1/freq.mntr[out.mean==k1 & enr.shape==k2])
# # sample size information
# mtext(text=paste0(format(round(
# outer[,,"ss.initial"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=2,at=1/freq.mntr)
# mtext(text=paste0(format(round(
# outer[,,"ss.final"][out.mean==k1 & enr.shape==k2]-
# outer[,,"ss.initial"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=3,at=1/freq.mntr)
# mtext(text=paste0(format(round(
# outer[,,"ss.final"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=4,at=1/freq.mntr)
#
#
#
# mtext(text="Monitor Freq",side=1,line=1,at=-0.05)
# mtext(text="SS Interim",side=1,line=2,at=-0.05)
# mtext(text="Follow-up",side=1,line=3,at=-0.05)
# mtext(text="SS Final",side=1,line=4,at=-0.05)
#### Type I error graphs ####
#c(bottom, left, top, right)
par(mar=c(5.1+4,4.1+2,2.1,2.1))
par(mfrow = c(1, 1))
k1<-c(4)
k2<-c(1)
plot(1/freq.mntr[out.mean==k1[1] & enr.shape==k2[1]],
outer[,,"eff.mon.initial"][out.mean==k1[1] & enr.shape==k2[1]],
type='l',ylim=c(0,.15),lwd=2,lty='longdash',
ylab="Type 1 Error Rate",xlab="",
main="",
axes=FALSE)
# horizontal lines
abline(h=seq(0,0.15,by=0.01),col='grey')
box()
for (i in length(k1)){
lines(1/freq.mntr[out.mean==k1[i] & enr.shape==k2[i]],
outer[,,"eff.mon.final"][out.mean==k1[i] & enr.shape==k2[i]],
lwd=2)
lines(1/freq.mntr[out.mean==k1[i] & enr.shape==k2[i]],
outer[,,"eff.mon.initial"][out.mean==k1[i] & enr.shape==k2[i]],
lty='longdash',lwd=2)
}
text(1/freq.mntr[out.mean==k1 & enr.shape==k2],
outer[,,"eff.mon.initial"][out.mean==k1 & enr.shape==k2],
labels=format(round(outer[,,"eff.mon.initial"][out.mean==k1 & enr.shape==k2],digits=3),
nsmall=3),pos=3)
text(1/freq.mntr[out.mean==k1 & enr.shape==k2],
outer[,,"eff.mon.final"][out.mean==k1 & enr.shape==k2],
labels=format(round(outer[,,"eff.mon.final"][out.mean==k1 & enr.shape==k2],digits=3),
nsmall=3),pos=1)
# yaxixs
axis(2,las=2,at=seq(0,.15,by=0.01),labels=format(seq(0,.15,by=0.01),nsmall=2))
# x axis
axis(1,las=0,at=1/freq.mntr[out.mean==k1 & enr.shape==k2],
labels=c("","","","","",""))
# manual x-axis
mtext(text=freq.mntr,side=1,line=1,at=1/freq.mntr[out.mean==k1 & enr.shape==k2])
# # sample size information
# mtext(text=paste0(format(round(
# outer[,,"ss.initial"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=2,at=1/freq.mntr)
# mtext(text=paste0(format(round(
# outer[,,"ss.final"][out.mean==k1 & enr.shape==k2]-
# outer[,,"ss.initial"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=3,at=1/freq.mntr)
# mtext(text=paste0(format(round(
# outer[,,"ss.final"][out.mean==k1 & enr.shape==k2],
# digits=1),nsmall=1)),
# side=1,line=4,at=1/freq.mntr)
#
#
#
# mtext(text="Monitor Freq",side=1,line=1,at=-0.05)
# mtext(text="SS Interim",side=1,line=2,at=-0.05)
# mtext(text="Follow-up",side=1,line=3,at=-0.05)
# mtext(text="SS Final",side=1,line=4,at=-0.05)
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors (low, high)
tail.enth<-0.05
source("code_headers.R")
sig.fut<-0.85
sig.eff<-0.95
cred.tail<-0.05
max.ss<-76
reps<-50000
p.range<-0.20
#p.range<-seq(p.skpt-0.05,p.enth+0.05,by=0.05)
freq.mntr<-c(1,2,4,8,16,76)
enr.shape<-0.25
out.mean<-4
source("code_main_nested.R")
outer
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors (low, high)
tail.enth<-0.05
source("code_headers.R")
sig.fut<-0.85
sig.eff<-0.95
cred.tail<-0.05
max.ss<-76
reps<-50000
p.range<-0.20
#p.range<-seq(p.skpt-0.05,p.enth+0.05,by=0.05)
freq.mntr<-c(1,2,4,8,16,76)
enr.shape<-1
out.mean<-8
source("code_main_nested.R")
outer
integrate(dnorm, -1.96, 1.96)
integrate(dnorm, -Inf, Inf)
dnorm
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors (low, high)
tail.enth<-0.05
source("code_headers.R")
evan<-function(x){
x^(a-1)*(1-x)^(b-1)
}
a<-alpha.enth
b<-beta.enth
integrate(evan,lower=0,upper=1)
?beta
beta(alpha.enth,beta.enth)
mu<-0.4
sigma0<-0.1
lambda0<-2
mu<-0.4
sigma0<-0.1
lambda0<-2
gen.nrml<-function(x){
exp((abs(x-mu0)/sigma0)^lambda)
}
x<-seq(0,1,by=0.01)
plot(x,gen.nrml(x))
mu0<-0.4
sigma0<-0.1
lambda0<-2
gen.nrml<-function(x){
exp((abs(x-mu0)/sigma0)^lambda)
}
x<-seq(0,1,by=0.01)
plot(x,gen.nrml(x))
exp((abs(x-mu0)/sigma0)^lambda0)
gen.nrml<-function(x){
exp((abs(x-mu0)/sigma0)^lambda0)
}
x<-seq(0,1,by=0.01)
plot(x,gen.nrml(x))
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x))
a<-alpha.enth
nc<-integrate(gen.nrml,lower=0,upper=1)
nc
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc)
plot(x,gen.nrml(x)/nc)
gen.nrml(x)
gen.nrml(x
)
nc
integrate
nc
nc[1]
nc[2]
nc[3]
nc[4]
nc[5]
nc[6]
nc[7]
plot(x,gen.nrml(x)/nc[1],type='l')
gen.nrml(x)/nc[1]
nc[1]
nc[1]+1
nc[[1]]
plot(x,gen.nrml(x)/nc[[1],type='l')
plot(x,gen.nrml(x)/nc[[1]],type='l')
mu0<-0.4
sigma0<-0.1
lambda0<-2
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
mu0<-0.5
sigma0<-0.1
lambda0<-2
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
mu0<-0.5
sigma0<-0.1
lambda0<-4
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
mu0<-0.5
sigma0<-0.1
lambda0<-4 # does not change height
lambda0<-100 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
sigma0<0.5
lambda0<-100 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
a<-alpha.enth
b<-beta.enth
plot(x,gen.nrml(x)/nc[[1]],type='l')
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
mu0<-0.5
sigma0<2
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
a<-alpha.enth
b<-beta.enth
integrate(evan,lower=0,upper=1)
sigma0<2
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
sigma0<10
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
a<-alpha.enth
sigma0<10
sigma0<-10
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
rm(list = ls())
setwd("D:/Users/ekwiatko/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/")
source("code_functions.R")
p.skpt<-0.20      # response rate for skeptic, enthusiast, futility
p.enth<-0.40
p.intr<-0.30
tail.skpt<-0.045  # tail probabilities for priors (low, high)
tail.enth<-0.05
source("code_headers.R")
# Step 5: Plot Skeptical and enthuastic priors separately
## 7/19/19 match slide 14 from FDA presentation, shade in gray scale, set 350 DPI
par(ask=FALSE)
par(mfrow = c(1, 2))
x<-seq(0,1,by=0.01)
# Make 2 boxplots
#low (skeptical)
plot(x,dbeta(x,alpha.skpt,beta.skpt),type="l",
xlab="Response Probability",ylab="Density Value",
main="Skeptical Beta Prior",
#xaxt="n",
ylim=c(0,max(dbeta(x,alpha.skpt,beta.skpt))))
polygon(c(x[x<=0.4],0.4),c(dbeta(x,alpha.skpt,beta.skpt)[x<=0.4],0),col="blue")
polygon(c(x[x>=0.4],0.4),c(dbeta(x,alpha.skpt,beta.skpt)[x>=0.4],0),col="red")
text(0.5, 4,expression(P(theta>0.40)==0.045),pos=4)
text(0.5,3.8,"Approximately N=14.0 Subjects",pos=4)
text(0.5,3.6,expression(E(theta)==0.20),pos=4)
#axis(1,at=p.skpt,labels=expression(theta[0]))
#axis(1,at=seq(0,1,by=0.2))
#high (enthuastic)
plot(x,dbeta(x,alpha.enth,beta.enth),type="l",
xlab="Response Probability",
ylab="",
main="Enthuastic Beta Prior",
#xaxt="n",
yaxt="n",
ylim=c(0,max(dbeta(x,alpha.enth,beta.enth))))
axis(2,at=c(0,1,2,3),labels=c(0,1,2,3))
polygon(c(x[x<=0.2],0.2),c(dbeta(x,alpha.enth,beta.enth)[x<=0.2],0),col="red")
polygon(c(x[x>=0.2],0.2),c(dbeta(x,alpha.enth,beta.enth)[x>=0.2],0),col="blue")
text(0.5, 3,expression(P(theta<0.20)==0.05),pos=4)
text(0.5,2.85,"Approximately N=14.0 Subjects",pos=4)
text(0.5,2.7,expression(E(theta)==0.40),pos=4)
mu0<-0.4
sigma0<-10
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
mu0<-0.4
sigma0<-1
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
par(mfrow = c(1, 1))
mu0<-0.4
sigma0<-1
lambda0<-2 # does not change height
gen.nrml<-function(x){
exp(-(abs(x-mu0)/sigma0)^lambda0)
}
epsilon<-1E-6
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
nc
x<-seq(0.01,0.99,by=0.01)
plot(x,gen.nrml(x)/nc[[1]],type='l')
integrate(gen.nrml(x)/nc[[1]],lower=0+epsilon,upper=0.2)
nc<-integrate(gen.nrml,lower=0+epsilon,upper=1-epsilon)
integrate(gen.nrml(x),lower=0+epsilon,upper=0.2)
integrate(gen.nrml/nc[[1]],lower=0,upper=0.2)
integrate(gen.nrml/nc[[1]],lower=epsilon,upper=0.2)
integrate(gen.nrml,lower=epsilon,upper=0.2)
