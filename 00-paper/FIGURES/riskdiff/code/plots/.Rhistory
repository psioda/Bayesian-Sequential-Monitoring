ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- omega.enth
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = 2)
y <- omega.ni
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = "blue")
x <- c(Table0$risk.diff.initial)
y <- omega.skpt
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1))
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- omega.enth
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = 2)
y <- omega.ni
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = "blue")
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1))
setwd("/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiff/code/plots/")
Table0 <- read.csv("../../output/Table0_merged.csv")
Table0 <- Table0[Table0$eff.mix.prob.x==10,]
par(mfrow=c(1,2))
x <- c(Table0$risk.diff.initial,Table0$risk.diff.final)
y <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
plot(x, y, xlab = "Observed Response Difference", ylab = "Box's p-value", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- c(Table0$box.enth.initial,Table0$box.enth.final)
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col=2, lwd=2 )
y <- c(Table0$box.ni.initial,Table0$box.ni.final)
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col="blue", lwd=2 )
abline(v=0, col="grey")
abline(v=0.12, col="grey")
omega.skpt <- Table0$box.skpt.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.enth <- Table0$box.enth.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.ni   <- Table0$box.ni.initial / (Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
x <- c(Table0$risk.diff.initial)
y <- omega.skpt
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1))
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- omega.enth
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = 2)
y <- omega.ni
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = "blue")
## Used for 7/2/20 plot
# y1 <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
# y2 <- c(Table0$box.enth.initial,Table0$box.enth.final)
# y  <- y2 - y1
# plot(x, y, xlab = "Observed Risk Difference", ylab = "Difference in Box's p-value")
# model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
# myPredict <- predict( model )
# ix <- sort(x,index.return=T)$ix
# lines(x[ix], myPredict[ix], lwd=2 )
# abline(v=0, col="grey")
# abline(v=0.12, col="grey")
# abline(h=0)
x <- c(Table0$risk.diff.initial)
y <- omega.skpt
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1), xlab = "Observed Response Difference", ylab = "Mixture Weights")
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1), xlab = "Observed Response Difference", ylab = "Mixture Weights")
setwd("/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiff/code/plots/")
Table0 <- read.csv("../../output/Table0_merged.csv")
Table0 <- Table0[Table0$eff.mix.prob.x==10,]
par(mfrow=c(1,2))
x <- c(Table0$risk.diff.initial,Table0$risk.diff.final)
y <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
plot(x, y, xlab = "Observed Response Difference", ylab = "Box's p-value", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- c(Table0$box.enth.initial,Table0$box.enth.final)
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col=2, lwd=2 )
y <- c(Table0$box.ni.initial,Table0$box.ni.final)
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col="blue", lwd=2 )
abline(v=0, col="grey")
abline(v=0.12, col="grey")
omega.skpt <- Table0$box.skpt.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.enth <- Table0$box.enth.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.ni   <- Table0$box.ni.initial / (Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
x <- c(Table0$risk.diff.initial)
y <- omega.skpt
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1), xlab = "Observed Response Difference", ylab = "Mixture Weights")
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- omega.enth
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = 2)
y <- omega.ni
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = "blue")
## Used for 7/2/20 plot
# y1 <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
# y2 <- c(Table0$box.enth.initial,Table0$box.enth.final)
# y  <- y2 - y1
# plot(x, y, xlab = "Observed Risk Difference", ylab = "Difference in Box's p-value")
# model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
# myPredict <- predict( model )
# ix <- sort(x,index.return=T)$ix
# lines(x[ix], myPredict[ix], lwd=2 )
# abline(v=0, col="grey")
# abline(v=0.12, col="grey")
# abline(h=0)
-(3/6)+(1-2/5)-(2/4)+(1-1/3)-(1/2)+1
survdiff(Surv(futime, fustat) ~ rx,data=ovarian)
library(survival)
survdiff(Surv(futime, fustat) ~ rx,data=ovarian)
ovarian
survdiff(Surv(futime, fustat) ~ rx)
library(survival)
fustat <- c(1, 1, 1, 1, 1, 1)
futime <- c(1, 2, 3, 4, 5, 6)
rx     <- c(1, 2, 1, 2, 1, 2)
survdiff(Surv(futime, fustat) ~ rx)
library("coin")
install.packages("coin")
library(coin)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
rx     <- as.facdtor(c(1, 2, 1, 2, 1, 2))
rx     <- as.factor(c(1, 2, 1, 2, 1, 2))
survdiff(Surv(futime, fustat) ~ rx)
install.packages("coin")
library(coin)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
library(survival)
library(coin)
fustat <- c(1, 1, 1, 1, 1, 1)
futime <- c(1, 2, 3, 4, 5, 6)
rx     <- as.factor(c(1, 2, 1, 2, 1, 2))
survdiff(Surv(futime, fustat) ~ rx)
library(coin)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
-(3/6)+(1-2/5)-(2/4)+(1-1/3)-(1/2)+1
rx     <- as.factor(c(2, 1, 2, 1, 2, 1))
survdiff(Surv(futime, fustat) ~ rx)
library(coin)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
-(3/6)+(1-2/5)-(2/4)+(1-1/3)-(1/2)+1
?logrank_test
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
logrank_test(Surv(time, event) ~ group, data = g3, distribution = "exact")
survdiff(Surv(time, event) ~ group, data = g3)
logrank_test(Surv(time, event) ~ group, data = g3, distribution = "exact")
burn
library(KMsurv)
install.packages(KMsurv)
install.packages("KMsurv")
library(KMsurv)
data()
burn
data(burn)
burn
data("lung")
head(lung)
lung
tables(lung$time)
table(lung$time)
library("survminer")
install.packages("survminer")
library("survminer")
data("lung")
head(lung)
lung$sex
survdiff(Surv(time, event) ~ group, data = g3)
logrank_test(Surv(time, event) ~ group, data = g3, distribution = "exact")
library(coin)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
fustat <-           c(1, 1, 1, 1, 1, 1)
futime <-           c(1, 2, 3, 4, 5, 6)
rx     <- as.factor(c(2, 1, 2, 1, 2, 1))
survdiff(Surv(futime, fustat) ~ rx)
library(coin)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
-(3/6)+(1-2/5)-(2/4)+(1-1/3)-(1/2)+1
-(2/5)+(1-2/2)-(1/3)+(1-1/2)-(1/1)+1
-(2/5)+(1-2/2)-(1/3)+(1-1/2)-(1/1)
-(3/6)+(1-2/5)-(2/4)+(1-1/3)-(1/2)+1
data("glioma", package = "coin")
g3 <- subset(glioma, histology == "Grade3")
survdiff(Surv(time, event) ~ group, data = g3)
logrank_test(Surv(time, event) ~ group, data = g3, distribution = "exact")
g3
tables(g3$time)
table(g3$time)
?head
logrank_test(Surv(time, event) ~ group, data = head(g3, n=7), distribution = "exact")
fustat <-           c(1, 1, 1, 1, 1, 1)
futime <-           c(1, 2, 3, 4, 5, 6)
rx     <- as.factor(c(2, 1, 2, 1, 2, 1))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
fustat <-           c(1, 1, 1, 1, 1, 1)
futime <-           c(1, 2, 3, 4, 5, 6)
rx     <- as.factor(c(1, 1, 1, 2, 2, 2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
rx     <- as.factor(c(1, 1, 1, 1, 1, 1))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
fustat <-           c(1, 1, 1, 1, 1, 1)
futime <-           c(1, 2, 3, 4, 5, 6)
rx     <- as.factor(c(1, 1, 1, 1, 1, 2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
(1-1/6)+(1-1/5)+(1-1/4)+(1-1/3)+(1-1/2)+(1-1)
(-1/6)+(-1/5)+(-1/4)+(-1/3)+(-1/2)+(1-1)
fustat <-           c(1, 1)
futime <-           c(1, 2)
rx     <- as.factor(c(1, 2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
fustat <-           c(0, 0)
futime <-           c(1, 2)
rx     <- as.factor(c(1, 2))
survdiff(Surv(futime, fustat) ~ rx)
fustat <-           c(1, 1)
futime <-           c(1, 2)
rx     <- as.factor(c(1, 2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
fustat <-           c(1, 1, 1, 1)
futime <-           c(1, 2, 3, 4)
rx     <- as.factor(c(1, 2 ,1, 1))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
fustat <-           c(1, 1, 1,)
futime <-           c(1, 2, 3,)
rx     <- as.factor(c(1, 2 ,1,))
fustat <-           c(1, 1, 1)
futime <-           c(1, 2, 3)
fustat <-           c(1, 1, 1)
futime <-           c(1, 2, 3)
rx     <- as.factor(c(1, 2 ,1))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "exact")
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
futime <-           c(1, 2, 3)
rx     <- as.factor(c(1, 1 ,2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
fustat <-           c(1, 1, 1)
futime <-           c(1, 2, 3)
rx     <- as.factor(c(1, 2 ,2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
fustat <-           c(1, 1, 1)
futime <-           c(1, 2, 3)
rx     <- as.factor(c(1, 2 ,2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
?logrank_test
## Example data (Callaert, 2003, Tab. 1)
callaert <- data.frame(
time = c(1, 1, 5, 6, 6, 6, 6, 2, 2, 2, 3, 4, 4, 5, 5),
group = factor(rep(0:1, c(7, 8)))
)
## Logrank scores using mid-ranks (Callaert, 2003, Tab. 2)
with(callaert,
logrank_trafo(Surv(time)))
## Logrank scores using mid-ranks (Callaert, 2003, Tab. 2)
logrank_test(Surv(time) ~ group, data = callaert, distribution = "exact")
callaert
fustat <-           c(0, 0, 1, 1, 1)
futime <-           c(1, 2, 3, 4, 5)
rx     <- as.factor(c(1, 2 ,2, 2, 2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
fustat <-           c(0, 0, 1, 1, 1)
futime <-           c(1, 2, 3, 4, 5)
rx     <- as.factor(c(1, 2 ,1, 2, 2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
(-1/2)+(1-)
fustat <-           c(0, 0, 1, 1)
futime <-           c(1, 2, 3, 4)
rx     <- as.factor(c(1, 2 ,1, 2))
survdiff(Surv(futime, fustat) ~ rx)
logrank_test(Surv(futime, fustat) ~ rx, distribution = "asymptotic")
qnorm(-1.2247)
pnorm(-1.2247)
dnorm(-1.2247)
qnorm(0.95)
qnorm(0.975)
pnorm(1.96)
pnorm(-1.2247)
pnorm(-1.2247)*2
?logrank_test
setwd("/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiff/code/plots/")
Table0 <- read.csv("../../output/Table0_merged.csv")
Table0 <- Table0[Table0$eff.mix.prob.x==10,]
par(mfrow=c(1,2))
x <- c(Table0$risk.diff.initial,Table0$risk.diff.final)
y <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
plot(x, y, xlab = "Observed Response Difference", ylab = "Box's p-value", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- c(Table0$box.enth.initial,Table0$box.enth.final)
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col=2, lwd=2 )
y <- c(Table0$box.ni.initial,Table0$box.ni.final)
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col="blue", lwd=2 )
abline(v=0, col="grey")
abline(v=0.12, col="grey")
omega.skpt <- Table0$box.skpt.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.enth <- Table0$box.enth.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.ni   <- Table0$box.ni.initial / (Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
x <- c(Table0$risk.diff.initial)
y <- omega.skpt
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1), xlab = "Observed Response Difference", ylab = "Mixture Weights")
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- omega.enth
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = 2)
y <- omega.ni
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = "blue")
## Used for 7/2/20 plot
# y1 <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
# y2 <- c(Table0$box.enth.initial,Table0$box.enth.final)
# y  <- y2 - y1
# plot(x, y, xlab = "Observed Risk Difference", ylab = "Difference in Box's p-value")
# model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
# myPredict <- predict( model )
# ix <- sort(x,index.return=T)$ix
# lines(x[ix], myPredict[ix], lwd=2 )
# abline(v=0, col="grey")
# abline(v=0.12, col="grey")
# abline(h=0)
setwd("/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiff/code/plots/")
Table0 <- read.csv("../../output/Table0_merged.csv")
Table0 <- Table0[Table0$eff.mix.prob.x==10,]
par(mfrow=c(1,2))
x <- c(Table0$risk.diff.initial,Table0$risk.diff.final)
y <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
plot(x, y, xlab = "Observed Response Difference", ylab = "Box's p-value", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- c(Table0$box.enth.initial,Table0$box.enth.final)
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col=2, lwd=2 )
y <- c(Table0$box.ni.initial,Table0$box.ni.final)
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col="blue", lwd=2 )
abline(v=0, col="grey")
abline(v=0.12, col="grey")
omega.skpt <- Table0$box.skpt.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.enth <- Table0$box.enth.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.ni   <- Table0$box.ni.initial / (Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
x <- c(Table0$risk.diff.initial)
y <- omega.skpt
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1), xlab = "Observed Response Difference", ylab = "Mixture Weights")
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- omega.enth
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = 2)
y <- max(omega.ni-max(omega.skpt,omega.enth),0)
points(x,y, col="blue", pch = 19, cex = 0.25)
y <- pmax(omega.ni-pmax(omega.skpt,omega.enth),0)
y
y <- pmax(omega.ni-pmax(omega.skpt,omega.enth),0)
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = "blue")
setwd("/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiff/code/plots/")
Table0 <- read.csv("../../output/Table0_merged.csv")
Table0 <- Table0[Table0$eff.mix.prob.x==10,]
par(mfrow=c(1,2))
x <- c(Table0$risk.diff.initial,Table0$risk.diff.final)
y <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
plot(x, y, xlab = "Observed Response Difference", ylab = "Box's p-value", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- c(Table0$box.enth.initial,Table0$box.enth.final)
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col=2, lwd=2 )
y <- c(Table0$box.ni.initial,Table0$box.ni.final)
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col="blue", lwd=2 )
abline(v=0, col="grey")
abline(v=0.12, col="grey")
omega.skpt <- Table0$box.skpt.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.enth <- Table0$box.enth.initial/(Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
omega.ni   <- Table0$box.ni.initial / (Table0$box.skpt.initial+Table0$box.enth.initial+Table0$box.ni.initial)
x <- c(Table0$risk.diff.initial)
y <- omega.skpt
plot(x,y, pch = 19, cex = 0.25, ylim = c(0,1), xlab = "Observed Response Difference", ylab = "Mixture Weights")
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2 )
y <- omega.enth
points(x,y, col=2, pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = 2)
y <- pmax(omega.ni-pmax(omega.skpt,omega.enth),0)
points(x,y, col="blue", pch = 19, cex = 0.25)
model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], lwd=2, col = "blue")
## Used for 7/2/20 plot
# y1 <- c(Table0$box.skpt.initial,Table0$box.skpt.final)
# y2 <- c(Table0$box.enth.initial,Table0$box.enth.final)
# y  <- y2 - y1
# plot(x, y, xlab = "Observed Risk Difference", ylab = "Difference in Box's p-value")
# model <- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) + I(x^8) + I(x^9) + I(x^10))
# myPredict <- predict( model )
# ix <- sort(x,index.return=T)$ix
# lines(x[ix], myPredict[ix], lwd=2 )
# abline(v=0, col="grey")
# abline(v=0.12, col="grey")
# abline(h=0)
