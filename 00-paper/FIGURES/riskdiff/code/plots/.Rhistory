(pgnorm(q = 1,  mu = delta.skpt, alpha = skpt.rd.alpha0, beta = skpt.rd.beta0) -
pgnorm(q = -1, mu = delta.skpt, alpha = skpt.rd.alpha0, beta = skpt.rd.beta0))/
(pgnorm(q = 1,  mu = mu, alpha = skpt.alpha0, beta  = skpt.beta0) -
pgnorm(q = -x, mu = mu, alpha = skpt.alpha0, beta  = skpt.beta0))
}
############################################################################################################
############################################################################################################
# plot \pi(\eta|\theta = 0)
width.scale<-5
png('figure5b_NEW.png',width = 300*width.scale, height = 300*width.scale,pointsize=12,res=300)
# y.seq <- seq(0, 1, length = 1E3)
# plot(y.seq, skpt.prior.2(0,y.seq)/dgnorm(0, mu = delta.skpt, alpha = skpt.rd.alpha0, beta = skpt.rd.beta0), type = 'l')
# abline(v = mu)
y.seq <- seq(0, 1, length = 1E3)
cond <- function(y){
skpt.prior.2(0,y)/dgnorm(0, mu = delta.skpt, alpha = skpt.rd.alpha0, beta = skpt.rd.beta0)
}
plot(y.seq,
cond(y.seq),
type="l",
xlab="",
ylab="",
main="",
xaxt="n",
yaxt="n")
#axis(2,at=c(0,1,2,3),labels=c(0,1,2,3))
axis(1,
at=c(mu),
labels=c(as.expression(bquote(eta[0]))))
title(ylab="Density Value", line=1)
title(xlab="Control Response Rate",line=2)
#title(xlab="Density Value",line=2)
# polygon(c(delta.enth,y.seq[y.seq>=delta.enth],1),
#         c(0,cond(y.seq)[y.seq>=delta.enth],0),col="black")
# polygon(c(p.skpt,x[x>=p.skpt & x<=p.intr],p.intr),
#         c(0,prior.nc.enth(x)[x>=p.skpt & x<=p.intr],0),col="lightgrey")
segments(x0=mu,y0=0,y1=cond(mu))
legend("topright",
legend= c(
as.expression(bquote(mode(eta *"|"* theta==theta[0]) == eta[0]))#,
#as.expression(bquote(P(theta> theta[1])==.(tail.enth))),
#(bquote(k==1.5))
#as.expression(bquote(P(theta %in% (theta[0]*","*(theta[0]+theta[1])/2)==.(round((pnorm(qnorm(tail.enth)/2)-tail.enth)*scale,3)))))#,
#as.expression(bquote(GN(mu==theta[1],alpha==.(sigma0.enth),beta==.(lambda0.enth))))
))
mtext("(B)",side=2,line=1,at=cond(mu),las=1)
dev.off()
############################################################################################################
############################################################################################################
# plot \pi(\theta)
width.scale<-5
png('figure5a_NEW.png',width = 300*width.scale, height = 300*width.scale,pointsize=12,res=300)
x.seq <- seq(-1/2, 1/2, length = 1E3)
marg <- function(x){
dgnorm(x, mu = delta.skpt, alpha = skpt.rd.alpha0, beta = skpt.rd.beta0)
}
plot(x.seq,
marg(x.seq),
type="l",
xlab="",
ylab="",
main="",
xaxt="n",
yaxt="n")
#axis(2,at=c(0,1,2,3),labels=c(0,1,2,3))
axis(1,at=c(delta.enth,delta.skpt),
labels=c(as.expression(bquote(theta[1])),
as.expression(bquote(theta[0]))))
title(ylab="Density Value", line=1)
title(xlab="Risk Difference",line=2)
#title(xlab="Density Value",line=2)
polygon(c(delta.enth,x.seq[x.seq>=delta.enth],1),
c(0,marg(x.seq)[x.seq>=delta.enth],0),col="black")
# polygon(c(p.skpt,x[x>=p.skpt & x<=p.intr],p.intr),
#         c(0,prior.nc.enth(x)[x>=p.skpt & x<=p.intr],0),col="lightgrey")
segments(x0=delta.skpt,y0=0,y1=marg(0))
legend("topright",
legend= c(
as.expression(bquote(mode(theta) == theta[0])),
as.expression(bquote(P(theta> theta[1])==.(tail.enth))),
as.expression(bquote(k==1.5))
#as.expression(bquote(P(theta %in% (theta[0]*","*(theta[0]+theta[1])/2)==.(round((pnorm(qnorm(tail.enth)/2)-tail.enth)*scale,3)))))#,
#as.expression(bquote(GN(mu==theta[1],alpha==.(sigma0.enth),beta==.(lambda0.enth))))
))
mtext("(A)",side=2,line=1,at=marg(0),las=1)
dev.off()
############################################################################################################
############################################################################################################
x.len <- 101
y.len <- 101
x <- seq(-1, 1, length = x.len)
y <- seq(0,  1, length = y.len)
grid <- expand.grid(x = x, y = y)
grid.skpt <- grid
for (i in 1:nrow(grid)){
if (grid.skpt$x[i] >= 0 & (grid.skpt$y[i] < 1 - grid.skpt$x[i])) {
grid.skpt$z[i] <- skpt.prior.1(grid.skpt$x[i], grid.skpt$y[i])
} else if (grid.skpt$x[i] < 0 & (grid.skpt$y[i] > -grid.skpt$x[i])) {
grid.skpt$z[i] <- skpt.prior.2(grid.skpt$x[i], grid.skpt$y[i])
} else {
grid.skpt$z[i] <- 0
}
}
par(mar=c(5.1, 4.1, 4.1, 2.1)) # c(bottom, left, top, right))
width.scale<-6
if(output_png){png('figure5a.png',width = 300*2*width.scale, height = 300*width.scale,pointsize=16,res=300)}
plot(grid.skpt$x,grid.skpt$y,
xlab="",
ylab="",
col="white",
xaxt='n',
yaxt='n')
title(ylab=as.expression(bquote("Control Response Rate")),line=2)
title(xlab=as.expression(bquote("Risk Difference")),line=3)
cuts<-c(0,1E-11,1E-12,1E-10,1E-9,1E-8,1E-7,1E-6,1E-5,1E-4,1E-3,1E-2,1E-1,1,10,20,30)
colors<-gray.colors(length(cuts)-1, start = 0.9, end = 0)
for (i in 1:length(cuts)-1){
outer.xy <- grid.skpt[grid.skpt$z>cuts[i+1],c("x","y")]
inner.xy <- grid.skpt[grid.skpt$z>cuts[i],c("x","y")]
outer.x<-outer.xy[chull(outer.xy),"x"]
outer.y<-outer.xy[chull(outer.xy),"y"]
inner.x<-inner.xy[chull(inner.xy),"x"]
inner.y<-inner.xy[chull(inner.xy),"y"]
polygon(c(outer.x,outer.x[1],inner.x,inner.x[1]),
c(outer.y,outer.y[1],inner.y,inner.y[1]),
col=colors[i],
border = NA)
}
#abline(h=c(0))
#abline(v=0)
## FILL IN LAST SEGMENT
polygon(c(outer.x,outer.x[1]),
c(outer.y,outer.y[1]),
col=colors[i],
border = NA)
# segments(x0=delta.enth,
#          x1=delta.enth,
#          y0=0,
#          y1=1-delta.enth)
#
#
# segments(x0=delta.intr,
#          x1=delta.intr,
#          y0=0,
#          y1=1-delta.intr)
mu1 <- mu + 0.2
mu2 <- mu + 0.1
# segments(y0=mu1,
#          y1=mu1,
#          x0=-mu1,
#          x1=1-mu1)
#
# segments(y0=mu2,
#          y1=mu2,
#          x0=-mu2,
#          x1=1-mu2)
tail.enth <- 0.025
scale     <- 1
# legend("topright",
#        legend= c(as.expression(bquote(mode(eta) == eta[0])),
#                  as.expression(bquote(P(eta< eta[1])==.(1-tail.enth))),
#                  as.expression(bquote(P(eta %in% (eta[1]*","*(eta[0]+eta[1])/2)==.(round((pnorm(qnorm(tail.enth)/2)-tail.enth)*scale,3)))))))
#
# legend("bottomleft",
#        legend= c(as.expression(bquote(mode(theta) == theta[0])),
#                  as.expression(bquote(P(theta< theta[1])==.(1-tail.enth))),
#                  as.expression(bquote(P(theta %in% (theta[1]*","*(theta[0]+theta[1])/2)==.(round((pnorm(qnorm(tail.enth)/2)-tail.enth)*scale,3)))))))
axis(1,at=c(delta.skpt,delta.enth,-1,1),
labels=c(as.expression(bquote(theta[0])),
as.expression(bquote(theta[1])),
-1,
1))
axis(2,at=c(mu,
0,
1),
labels=c(as.expression(bquote(eta[0])),
0,
1))
mtext("(C)",side=2,line=2,at=1,las=1)
if(output_png){dev.off()}
# assemble final prior
enth.prior.1 <- function(x, y){ # for x > 0 (gamma > 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1 - x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = 0,     mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
enth.prior.2 <- function(x, y){ # for x < 0 (gamma < 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1,  mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = -x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
x.len <- 101
y.len <- 101
x <- seq(-1, 1, length = x.len)
y <- seq(0,  1, length = y.len)
grid <- expand.grid(x = x, y = y)
grid.enth <- grid
for (i in 1:nrow(grid)){
if (grid.enth$x[i] >= 0 && (grid.enth$x[i] < (1 - grid.enth$y[i]))) {
grid.enth$z[i] <- enth.prior.1(grid.enth$x[i], grid.enth$y[i])
} else if (grid.enth$x[i] <= 0 && (grid.enth$x[i] > -grid.enth$y[i])) {
grid.enth$z[i] <- enth.prior.2(grid.enth$x[i], grid.enth$y[i])
} else {
grid.enth$z[i] <- 0
}
}
par(mar=c(5.1, 4.1, 4.1, 2.1)) # c(bottom, left, top, right))
plot(grid.enth$x,grid.enth$y,
xlab="",
ylab="",
col="white",
xaxt='n',
yaxt='n')
title(ylab=as.expression(bquote("Response Probability")), line = 3)
title(xlab=as.expression(bquote("Risk Difference")), line = 3)
cuts<-c(0,1E-11,1E-12,1E-10,1E-9,1E-8,1E-7,1E-6,1E-5,1E-4,1E-3,1E-2,1E-1,1,10,20,30)
colors<-gray.colors(length(cuts)-1, start = 0.9, end = 0)
for (i in 1:length(cuts)-1){
outer.xy <- grid.enth[grid.enth$z>cuts[i+1],c("x","y")]
inner.xy <- grid.enth[grid.enth$z>cuts[i],c("x","y")]
outer.x<-outer.xy[chull(outer.xy),"x"]
outer.y<-outer.xy[chull(outer.xy),"y"]
inner.x<-inner.xy[chull(inner.xy),"x"]
inner.y<-inner.xy[chull(inner.xy),"y"]
polygon(c(outer.x,outer.x[1],inner.x,inner.x[1]),
c(outer.y,outer.y[1],inner.y,inner.y[1]),
col=colors[i],
border = NA)
}
axis(1,at=c(delta.skpt,delta.enth,-1,1),
labels=c(as.expression(bquote(theta[0])),as.expression(bquote(theta[1])),-1,1))
axis(2,at=c(mu,0,1),
labels=c(as.expression(bquote(mu[0])),0,1))
## FILL IN LAST SEGMENT
polygon(c(outer.x,outer.x[1]),
c(outer.y,outer.y[1]),
col=colors[i],
border = NA)
width.scale<-5
png('enth_aug12.png',width = 300*width.scale, height = 300*width.scale,pointsize=12,res=300)
# assemble final prior
enth.prior.1 <- function(x, y){ # for x > 0 (gamma > 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1 - x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = 0,     mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
enth.prior.2 <- function(x, y){ # for x < 0 (gamma < 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1,  mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = -x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
x.len <- 101
y.len <- 101
x <- seq(-1, 1, length = x.len)
y <- seq(0,  1, length = y.len)
grid <- expand.grid(x = x, y = y)
grid.enth <- grid
for (i in 1:nrow(grid)){
if (grid.enth$x[i] >= 0 && (grid.enth$x[i] < (1 - grid.enth$y[i]))) {
grid.enth$z[i] <- enth.prior.1(grid.enth$x[i], grid.enth$y[i])
} else if (grid.enth$x[i] <= 0 && (grid.enth$x[i] > -grid.enth$y[i])) {
grid.enth$z[i] <- enth.prior.2(grid.enth$x[i], grid.enth$y[i])
} else {
grid.enth$z[i] <- 0
}
}
par(mar=c(5.1, 4.1, 4.1, 2.1)) # c(bottom, left, top, right))
plot(grid.enth$x,grid.enth$y,
xlab="",
ylab="",
col="white",
xaxt='n',
yaxt='n')
title(ylab=as.expression(bquote("Response Probability")), line = 3)
title(xlab=as.expression(bquote("Risk Difference")), line = 3)
cuts<-c(0,1E-11,1E-12,1E-10,1E-9,1E-8,1E-7,1E-6,1E-5,1E-4,1E-3,1E-2,1E-1,1,10,20,30)
colors<-gray.colors(length(cuts)-1, start = 0.9, end = 0)
for (i in 1:length(cuts)-1){
outer.xy <- grid.enth[grid.enth$z>cuts[i+1],c("x","y")]
inner.xy <- grid.enth[grid.enth$z>cuts[i],c("x","y")]
outer.x<-outer.xy[chull(outer.xy),"x"]
outer.y<-outer.xy[chull(outer.xy),"y"]
inner.x<-inner.xy[chull(inner.xy),"x"]
inner.y<-inner.xy[chull(inner.xy),"y"]
polygon(c(outer.x,outer.x[1],inner.x,inner.x[1]),
c(outer.y,outer.y[1],inner.y,inner.y[1]),
col=colors[i],
border = NA)
}
axis(1,at=c(delta.skpt,delta.enth,-1,1),
labels=c(as.expression(bquote(theta[0])),as.expression(bquote(theta[1])),-1,1))
axis(2,at=c(mu,0,1),
labels=c(as.expression(bquote(mu[0])),0,1))
## FILL IN LAST SEGMENT
polygon(c(outer.x,outer.x[1]),
c(outer.y,outer.y[1]),
col=colors[i],
border = NA)
dev.off()
width.scale<-5
png('enth_aug12.png',width = 300*2*width.scale, height = 300*width.scale,pointsize=16,res=300)}
# assemble final prior
enth.prior.1 <- function(x, y){ # for x > 0 (gamma > 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1 - x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = 0,     mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
enth.prior.2 <- function(x, y){ # for x < 0 (gamma < 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1,  mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = -x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
x.len <- 101
y.len <- 101
x <- seq(-1, 1, length = x.len)
y <- seq(0,  1, length = y.len)
grid <- expand.grid(x = x, y = y)
grid.enth <- grid
for (i in 1:nrow(grid)){
if (grid.enth$x[i] >= 0 && (grid.enth$x[i] < (1 - grid.enth$y[i]))) {
grid.enth$z[i] <- enth.prior.1(grid.enth$x[i], grid.enth$y[i])
} else if (grid.enth$x[i] <= 0 && (grid.enth$x[i] > -grid.enth$y[i])) {
grid.enth$z[i] <- enth.prior.2(grid.enth$x[i], grid.enth$y[i])
} else {
grid.enth$z[i] <- 0
}
}
par(mar=c(5.1, 4.1, 4.1, 2.1)) # c(bottom, left, top, right))
plot(grid.enth$x,grid.enth$y,
xlab="",
ylab="",
col="white",
xaxt='n',
yaxt='n')
title(ylab=as.expression(bquote("Response Probability")), line = 3)
title(xlab=as.expression(bquote("Risk Difference")), line = 3)
cuts<-c(0,1E-11,1E-12,1E-10,1E-9,1E-8,1E-7,1E-6,1E-5,1E-4,1E-3,1E-2,1E-1,1,10,20,30)
colors<-gray.colors(length(cuts)-1, start = 0.9, end = 0)
for (i in 1:length(cuts)-1){
outer.xy <- grid.enth[grid.enth$z>cuts[i+1],c("x","y")]
inner.xy <- grid.enth[grid.enth$z>cuts[i],c("x","y")]
outer.x<-outer.xy[chull(outer.xy),"x"]
outer.y<-outer.xy[chull(outer.xy),"y"]
inner.x<-inner.xy[chull(inner.xy),"x"]
inner.y<-inner.xy[chull(inner.xy),"y"]
polygon(c(outer.x,outer.x[1],inner.x,inner.x[1]),
c(outer.y,outer.y[1],inner.y,inner.y[1]),
col=colors[i],
border = NA)
}
axis(1,at=c(delta.skpt,delta.enth,-1,1),
labels=c(as.expression(bquote(theta[0])),as.expression(bquote(theta[1])),-1,1))
axis(2,at=c(mu,0,1),
labels=c(as.expression(bquote(mu[0])),0,1))
## FILL IN LAST SEGMENT
polygon(c(outer.x,outer.x[1]),
c(outer.y,outer.y[1]),
col=colors[i],
border = NA)
dev.off()
width.scale<-5
png('enth_aug12.png',width = 300*2*width.scale, height = 300*width.scale,pointsize=16,res=300)
# assemble final prior
enth.prior.1 <- function(x, y){ # for x > 0 (gamma > 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1 - x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = 0,     mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
enth.prior.2 <- function(x, y){ # for x < 0 (gamma < 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1,  mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = -x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
x.len <- 101
y.len <- 101
x <- seq(-1, 1, length = x.len)
y <- seq(0,  1, length = y.len)
grid <- expand.grid(x = x, y = y)
grid.enth <- grid
for (i in 1:nrow(grid)){
if (grid.enth$x[i] >= 0 && (grid.enth$x[i] < (1 - grid.enth$y[i]))) {
grid.enth$z[i] <- enth.prior.1(grid.enth$x[i], grid.enth$y[i])
} else if (grid.enth$x[i] <= 0 && (grid.enth$x[i] > -grid.enth$y[i])) {
grid.enth$z[i] <- enth.prior.2(grid.enth$x[i], grid.enth$y[i])
} else {
grid.enth$z[i] <- 0
}
}
par(mar=c(5.1, 4.1, 4.1, 2.1)) # c(bottom, left, top, right))
plot(grid.enth$x,grid.enth$y,
xlab="",
ylab="",
col="white",
xaxt='n',
yaxt='n')
title(ylab=as.expression(bquote("Response Probability")), line = 3)
title(xlab=as.expression(bquote("Risk Difference")), line = 3)
cuts<-c(0,1E-11,1E-12,1E-10,1E-9,1E-8,1E-7,1E-6,1E-5,1E-4,1E-3,1E-2,1E-1,1,10,20,30)
colors<-gray.colors(length(cuts)-1, start = 0.9, end = 0)
for (i in 1:length(cuts)-1){
outer.xy <- grid.enth[grid.enth$z>cuts[i+1],c("x","y")]
inner.xy <- grid.enth[grid.enth$z>cuts[i],c("x","y")]
outer.x<-outer.xy[chull(outer.xy),"x"]
outer.y<-outer.xy[chull(outer.xy),"y"]
inner.x<-inner.xy[chull(inner.xy),"x"]
inner.y<-inner.xy[chull(inner.xy),"y"]
polygon(c(outer.x,outer.x[1],inner.x,inner.x[1]),
c(outer.y,outer.y[1],inner.y,inner.y[1]),
col=colors[i],
border = NA)
}
axis(1,at=c(delta.skpt,delta.enth,-1,1),
labels=c(as.expression(bquote(theta[0])),as.expression(bquote(theta[1])),-1,1))
axis(2,at=c(mu,0,1),
labels=c(as.expression(bquote(mu[0])),0,1))
## FILL IN LAST SEGMENT
polygon(c(outer.x,outer.x[1]),
c(outer.y,outer.y[1]),
col=colors[i],
border = NA)
dev.off()
width.scale<-5
png('enth_aug12.png',width = 300*2*width.scale, height = 300*width.scale,pointsize=16,res=300)
# assemble final prior
enth.prior.1 <- function(x, y){ # for x > 0 (gamma > 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1 - x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = 0,     mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
enth.prior.2 <- function(x, y){ # for x < 0 (gamma < 0)
exp(-(abs(x - delta.enth)/enth.rd.alpha0)^enth.rd.beta0)/(2*enth.rd.alpha0*gamma(1/enth.rd.beta0)/enth.rd.beta0)*
exp(-(abs(y - mu)/enth.alpha0)^enth.beta0)/(2*enth.alpha0*gamma(1/enth.beta0)/enth.beta0)/
(pgnorm(q = 1,  mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0) -
pgnorm(q = -1, mu = delta.enth, alpha = enth.rd.alpha0, beta = enth.rd.beta0))/
(pgnorm(q = 1,  mu = mu, alpha = enth.alpha0, beta  = enth.beta0) -
pgnorm(q = -x, mu = mu, alpha = enth.alpha0, beta  = enth.beta0))
}
x.len <- 101
y.len <- 101
x <- seq(-1, 1, length = x.len)
y <- seq(0,  1, length = y.len)
grid <- expand.grid(x = x, y = y)
grid.enth <- grid
for (i in 1:nrow(grid)){
if (grid.enth$x[i] >= 0 && (grid.enth$x[i] < (1 - grid.enth$y[i]))) {
grid.enth$z[i] <- enth.prior.1(grid.enth$x[i], grid.enth$y[i])
} else if (grid.enth$x[i] <= 0 && (grid.enth$x[i] > -grid.enth$y[i])) {
grid.enth$z[i] <- enth.prior.2(grid.enth$x[i], grid.enth$y[i])
} else {
grid.enth$z[i] <- 0
}
}
par(mar=c(5.1, 4.1, 4.1, 2.1)) # c(bottom, left, top, right))
plot(grid.enth$x,grid.enth$y,
xlab="",
ylab="",
col="white",
xaxt='n',
yaxt='n')
title(ylab=as.expression(bquote("Response Probability")), line = 3)
title(xlab=as.expression(bquote("Risk Difference")), line = 3)
cuts<-c(0,1E-11,1E-12,1E-10,1E-9,1E-8,1E-7,1E-6,1E-5,1E-4,1E-3,1E-2,1E-1,1,10,20,30)
colors<-gray.colors(length(cuts)-1, start = 0.9, end = 0)
for (i in 1:length(cuts)-1){
outer.xy <- grid.enth[grid.enth$z>cuts[i+1],c("x","y")]
inner.xy <- grid.enth[grid.enth$z>cuts[i],c("x","y")]
outer.x<-outer.xy[chull(outer.xy),"x"]
outer.y<-outer.xy[chull(outer.xy),"y"]
inner.x<-inner.xy[chull(inner.xy),"x"]
inner.y<-inner.xy[chull(inner.xy),"y"]
polygon(c(outer.x,outer.x[1],inner.x,inner.x[1]),
c(outer.y,outer.y[1],inner.y,inner.y[1]),
col=colors[i],
border = NA)
}
axis(1,at=c(delta.skpt,delta.enth,-1,1),
labels=c(as.expression(bquote(theta[0])),as.expression(bquote(theta[1])),-1,1))
axis(2,at=c(mu,0,1),
labels=c(as.expression(bquote(eta[0])),0,1))
## FILL IN LAST SEGMENT
polygon(c(outer.x,outer.x[1]),
c(outer.y,outer.y[1]),
col=colors[i],
border = NA)
dev.off()
