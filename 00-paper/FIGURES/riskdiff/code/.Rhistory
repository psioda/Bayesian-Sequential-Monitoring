load("/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiff/code/args_model.RData")
skpt.rd.beta0
q.outer    <- 1 - sig.eff
scale      <- 0.75
q.inner    <- (1 - pnorm(qnorm(1 - q.outer)/2) - q.outer)*scale
source("priors/04_skpt_marginal.R", local = TRUE)
marginal()
f1 <- function(a){   # q.outer
skpt.rd.prior <- function(x){
dgnorm(x,           delta.skpt, a[1], a[2])/
(pgnorm(q = 1,    delta.skpt, a[1], a[2]) -
pgnorm(q = -1, delta.skpt, a[1], a[2]))
}
# P(theta > theta_1) (called delta.enth for historical reasons)
integrate(skpt.rd.prior,
lower = delta.enth,
upper = 1)$value
}
f2 <- function(a){   # q.inner
skpt.rd.prior <- function(x){
dgnorm(x,           delta.skpt, a[1], a[2])/
(pgnorm(q = 1,    delta.skpt, a[1], a[2]) -
pgnorm(q = -1, delta.skpt, a[1], a[2]))
}
# P((theta_1+theta_0)/2 < theta < theta_1) (called delta.intr for historical reasons)
integrate(skpt.rd.prior,
lower = delta.intr,
upper = delta.enth)$value
}
start <- c(skpt.rd.alpha0,skpt.rd.beta0)
fn <- function(a){
(f1(a) - q.outer)^2 + (f2(a) - q.inner)^2
}
optim.fit <- optim(par          = start,
fn           = fn,
lower        = c(0, 0),
upper        = c(Inf, Inf),
method       = "L-BFGS-B")
a2 <- optim.fit$par
nlm.fit <- nlminb(start     = start,
objective = fn,
lower     = c(0, 0),
upper     = c(Inf, Inf))
a2 <- nlm.fit$par
print(paste0("Upper tail ", f1(a2)))
print(paste0("Upper half ", f2(a2)))
print(paste0("skpt.rd.alpha0 ", a2[1]))
print(paste0("skpt.rd.beta0  ", a2[2]))
skpt.rd.alpha0 <- a2[1]
skpt.rd.beta0  <- a2[2]
delta.enth <- 0.12
delta.skpt <- 0
delta.intr <- (delta.skpt+delta.enth)/2
mu         <- 0.39
sig.fut    <- 0.975
sig.eff    <- 0.975
q.outer    <- 1 - sig.eff
scale      <- 0.75
q.inner    <- (1 - pnorm(qnorm(1 - q.outer)/2) - q.outer)*scale
source("priors/04_skpt_marginal.R", local = TRUE)
getwd()
source("04_skpt_marginal.R", local = TRUE)
marginal()
library(dgnorm)
library(gnorm)
marginal()
f1 <- function(a){   # q.outer
skpt.rd.prior <- function(x){
dgnorm(x,           delta.skpt, a[1], a[2])/
(pgnorm(q = 1,    delta.skpt, a[1], a[2]) -
pgnorm(q = -1, delta.skpt, a[1], a[2]))
}
# P(theta > theta_1) (called delta.enth for historical reasons)
integrate(skpt.rd.prior,
lower = delta.enth,
upper = 1)$value
}
f2 <- function(a){   # q.inner
skpt.rd.prior <- function(x){
dgnorm(x,           delta.skpt, a[1], a[2])/
(pgnorm(q = 1,    delta.skpt, a[1], a[2]) -
pgnorm(q = -1, delta.skpt, a[1], a[2]))
}
# P((theta_1+theta_0)/2 < theta < theta_1) (called delta.intr for historical reasons)
integrate(skpt.rd.prior,
lower = delta.intr,
upper = delta.enth)$value
}
start <- c(skpt.rd.alpha0,skpt.rd.beta0)
fn <- function(a){
(f1(a) - q.outer)^2 + (f2(a) - q.inner)^2
}
optim.fit <- optim(par          = start,
fn           = fn,
lower        = c(0, 0),
upper        = c(Inf, Inf),
method       = "L-BFGS-B")
a2 <- optim.fit$par
nlm.fit <- nlminb(start     = start,
objective = fn,
lower     = c(0, 0),
upper     = c(Inf, Inf))
a2 <- nlm.fit$par
print(paste0("Upper tail ", f1(a2)))
print(paste0("Upper half ", f2(a2)))
print(paste0("skpt.rd.alpha0 ", a2[1]))
print(paste0("skpt.rd.beta0  ", a2[2]))
skpt.rd.alpha0 <- a2[1]
skpt.rd.beta0  <- a2[2]
assign("skpt.rd.alpha0",skpt.rd.alpha0, envir = .GlobalEnv)
assign("skpt.rd.beta0", skpt.rd.beta0,  envir = .GlobalEnv)
source("priors/05_skpt_conditional.R", local = TRUE)
##################################
# Model parameters
# Evan Kwiatkowski, Feb 23, 2020
##################################
rm(list = ls())
if (Sys.getenv("USER") == "kwiatkoe") {
library(pracma)
library(gnorm)
setwd("/Users/kwiatkoe/Documents/Github/Bayesian-Sequential-Monitoring/Real FDA Data Example/code")
}
if (.Platform$OS.type == "unix")    {
library(pracma, lib.loc = "../rpkgs/")
library(gnorm,  lib.loc = "../rpkgs/")
}
delta.enth <- 0.12
delta.skpt <- 0
delta.intr <- (delta.skpt+delta.enth)/2
mu         <- 0.39
sig.fut    <- 0.975
sig.eff    <- 0.975
source("03_code_integrate.R")
source("06_code_functions.R") # contains nested source("code_posteriors.R", local = TRUE)
source("08_code_inference.R") # 2021-07-17
source("priors/03_enth_joint.R")
enth_joint()
source("priors/06_skpt_joint.R")
skpt_joint()
## based on skpt prior -- measures upper tail and upper half
delta.ni.enth <- 0.42   ## new upper
delta.ni.skpt <- 0.06   ## new modal value
delta.ni.intr <- 0.24   ## new halfway point
#delta.ni.enth <- (3*delta.enth-delta.skpt)/2 ## new upper
#delta.ni.skpt <- (delta.skpt+delta.enth)/2   ## new modal value
#delta.ni.intr <- delta.enth                  ## new halfway point
source("priors/09_ni_joint.R")
ni_joint()
save.image(file = 'args_model.RData')
setwd("/Users/kwiatkoe/Documents/Github/Bayesian-Sequential-Monitoring/00-paper/FIGURES/code")
setwd("/Users/kwiatkoe/Documents/Github/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiffcode")
##################################
# Model parameters
# Evan Kwiatkowski, Feb 23, 2020
##################################
rm(list = ls())
if (Sys.getenv("USER") == "kwiatkoe") {
library(pracma)
library(gnorm)
setwd("/Users/kwiatkoe/Documents/Github/Bayesian-Sequential-Monitoring/00-paper/FIGURES/riskdiff/code")
}
if (.Platform$OS.type == "unix")    {
library(pracma, lib.loc = "../rpkgs/")
library(gnorm,  lib.loc = "../rpkgs/")
}
delta.enth <- 0.12
delta.skpt <- 0
delta.intr <- (delta.skpt+delta.enth)/2
mu         <- 0.39
sig.fut    <- 0.975
sig.eff    <- 0.975
source("03_code_integrate.R")
source("06_code_functions.R") # contains nested source("code_posteriors.R", local = TRUE)
source("08_code_inference.R") # 2021-07-17
source("priors/03_enth_joint.R")
enth_joint()
source("priors/06_skpt_joint.R")
skpt_joint()
## based on skpt prior -- measures upper tail and upper half
delta.ni.enth <- 0.42   ## new upper
delta.ni.skpt <- 0.06   ## new modal value
delta.ni.intr <- 0.24   ## new halfway point
#delta.ni.enth <- (3*delta.enth-delta.skpt)/2 ## new upper
#delta.ni.skpt <- (delta.skpt+delta.enth)/2   ## new modal value
#delta.ni.intr <- delta.enth                  ## new halfway point
source("priors/09_ni_joint.R")
ni_joint()
save.image(file = 'args_model.RData')
skpt.rd.beta0
39*53
40*54
