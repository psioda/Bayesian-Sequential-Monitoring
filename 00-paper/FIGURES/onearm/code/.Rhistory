dev.off()
par(mar=c(5.1,4.1,2.1,2.1)) #c(bottom, left, top, right)
rm(list = ls())
root<-"/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
source("args_model.R")
args_simulation<-read.csv(file="args_simulation.csv",header=TRUE,sep=",")
Table1<-read.csv(file="../output/Table1_merged.csv",header=TRUE,sep=",")
combined1<-merge(args_simulation,Table1,by.x="X",by.y="idx")
figure3<-combined1[combined1$model==1 & combined1$skpt_spike==0 & combined1$enth_flat==0,] # change here
figure3_table<-figure3[seq(1,length(figure3$p.range),length=5),]
label_main=""
stretch<-p.skpt*0.9
width.scale<-7
png('../../figure3a.png',
width = 450*width.scale,
height = 300*width.scale,
pointsize=16,
res=300)
source("plots/plots_seq_design_prop.R")
mtext("(A)", side = 2, line = 3, at = 1, las = 1)
dev.off()
##############################################
#### Figure 3b, One Arm Evidence Decrease ####
##############################################
dev.off()
rm(list = ls())
root<-"/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
source("args_model.R")
args_simulation<-read.csv(file="args_simulation.csv",header=TRUE,sep=",")
Table2<-read.csv(file="../output/Table2_merged.csv",header=TRUE,sep=",")
combined2<-merge(args_simulation,Table2,by.x="X",by.y="idx")
Table3<-read.csv(file="../output/Table3_merged.csv",header=TRUE,sep=",")
# need to fix warning message
combined3<-merge(combined2,Table3,by.x="X",by.y="idx")
figure3b<-combined3[combined3$model==1 & combined3$skpt_spike==1 & combined3$enth_flat==0,]
figure3b_table<-figure3b[figure3b$p.range %in% c(figure3b$p.range[seq(1,length(figure3b$p.range),length=5)]),]
width.scale<-7
png('../../figure3b.png',width = 450*width.scale, height = 300*width.scale,pointsize=16,res=300)
source("plots/plots_decrease.R")
mtext("(B)", side = 2, line = 3, at = 0.975, las = 1)
dev.off()
###############################
#### Figure 4, One Arm T1E ####
###############################
rm(list = ls())
root<-"/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
source("args_model.R")
args_simulation<-read.csv(file="args_simulation.csv",header=TRUE,sep=",")
## load data from longleaf
Table1<-read.csv(file="../output/Table1_merged.csv",header=TRUE,sep=",")
combined1<-merge(args_simulation,Table1,by.x="X",by.y="idx")
## subset data before running plot
k1<-c(4)
k2<-c(1)
figure4<-combined1[combined1$model==2 & combined1$out.mean==k1[1] & combined1$enr.shape==k2[1],]
v<-floor(max.ss/figure4$freq.mntr)
width.scale<-7
# run plot
#png('../../figure4.png',width = 450*width.scale, height = 300*width.scale,pointsize=16,res=300)
label_main=""
stretch<- (-1.15)
mntr.pts<-c(1,2,4,8,16,56,112)
source("plots/plots_t1e.R")
legend("right",c("Initial","Final"),lty=c(5,1))
##################################################
### Figure S1, NEW One Arm Enrollment Schemes ####
##################################################
rm(list = ls())
png('../../figure4.png',width = 450*width.scale, height = 300*width.scale,pointsize=16,res=300)
label_main=""
stretch<- (-1.15)
mntr.pts<-c(1,2,4,8,16,56,112)
source("plots/plots_t1e.R")
legend("right",c("Initial","Final"),lty=c(5,1))
dev.off()
rm(list = ls())
root<-"/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
source("args_model.R")
args_simulation<-read.csv(file="args_simulation.csv",header=TRUE,sep=",")
## load data from longleaf
Table1<-read.csv(file="../output/Table1_merged.csv",header=TRUE,sep=",")
combined1<-merge(args_simulation,Table1,by.x="X",by.y="idx")
## subset data before running plot
k1<-c(4)
k2<-c(1)
figure4<-combined1[combined1$model==2 & combined1$out.mean==k1[1] & combined1$enr.shape==k2[1],]
v<-floor(max.ss/figure4$freq.mntr)
#freq.mntr.lst<-length(v)-match(unique(v),rev(v))+1
#figure4<-figure4[figure4$freq.mntr %in% freq.mntr.lst,]
width.scale<-7
# run plot
png('../../figure4.png',width = 450*width.scale, height = 300*width.scale,pointsize=16,res=300)
label_main=""
stretch<- (-1.15)
mntr.pts<-c(1,2,4,8,16,56,112)
source("plots/plots_t1e.R")
legend("right",c("Initial","Final"),lty=c(5,1))
dev.off()
rm(list = ls())
root<-"/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
source("args_model.R")
args_simulation<-read.csv(file="args_simulation.csv",header=TRUE,sep=",")
Table1<-read.csv(file="../output/Table1_merged.csv",header=TRUE,sep=",")
combined1<-merge(args_simulation,Table1,by.x="X",by.y="idx")
k1<-c(4)
k2<-c(0.25)
width.scale<-7
## subset data before running plot, called figure4 for historical reasons
figure4<-combined1[combined1$model==2 & combined1$enr.shape==k2[1],]
# run plot
png('../../figureS1.png',width = 450*width.scale, height = 300*width.scale,pointsize=16,res=300)
label_main=""
stretch<- (-1.15)
mntr.pts<-c(1,2,4,8,16,56,112)
source("plots/plots_t1e.R")
legend("right",c("Initial","Final"),lty=c(5,1))
dev.off()
rm(list = ls())
root<-"/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
source("args_model.R")
args_simulation<-read.csv(file="args_simulation.csv",header=TRUE,sep=",")
## load data from longleaf
Table1<-read.csv(file="../output/Table1_merged.csv",header=TRUE,sep=",")
combined1<-merge(args_simulation,Table1,by.x="X",by.y="idx")
#par(mar=c(5.1+5,4.1+1,2.1,2.1))
#par(mai=c(1.2,1.1,0,1)) #c(bottom, left, top, right)
label_main=""
stretch<-p.skpt*0.9
width.scale<-7
png('../../figureS2a.png',
width = 450*width.scale,
height = 300*width.scale,
pointsize=16,
res=300)
## subset data before running plot
figure3<-combined1[combined1$model==1 & combined1$skpt_spike==1 & combined1$enth_flat==0,]
figure3_table<-figure3[seq(1,length(figure3$p.range),length=3),]
source("plots/plots_seq_design_prop.R")
dev.off()
png('../../figureS2b.png',
width = 450*width.scale,
height = 300*width.scale,
pointsize=16,res=300)
figure3<-combined1[combined1$model==1 & combined1$skpt_spike==1 & combined1$enth_flat==1,]
figure3_table<-figure3[seq(1,length(figure3$p.range),length=3),]
source("plots/plots_seq_design_prop.R")
dev.off()
png('../../figureS2c.png',
width = 450*width.scale,
height = 300*width.scale,
pointsize=16,res=300)
figure3<-combined1[combined1$model==1 & combined1$skpt_spike==0 & combined1$enth_flat==1,]
figure3_table<-figure3[seq(1,length(figure3$p.range),length=3),]
source("plots/plots_seq_design_prop.R")
dev.off()
png('../../figureS2d.png',
width = 450*width.scale,
height = 300*width.scale,
pointsize=16,res=300)
figure3<-combined1[combined1$model==1 & combined1$skpt_spike==0 & combined1$enth_flat==0,]
figure3_table<-figure3[seq(1,length(figure3$p.range),length=3),]
source("plots/plots_seq_design_prop.R")
dev.off()
c(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60)
sum(c)
factors <- c(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60)
sum(factors)
###############################
#### Figure 4, One Arm T1E ####
###############################
rm(list = ls())
root<-"/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
source("args_model.R")
args_simulation<-read.csv(file="args_simulation.csv",header=TRUE,sep=",")
## load data from longleaf
Table1<-read.csv(file="../output/Table1_merged.csv",header=TRUE,sep=",")
combined1<-merge(args_simulation,Table1,by.x="X",by.y="idx")
## subset data before running plot
k1<-c(4)
k2<-c(1)
figure4<-combined1[combined1$model==2 & combined1$out.mean==k1[1] & combined1$enr.shape==k2[1],]
v<-floor(max.ss/figure4$freq.mntr)
width.scale<-7
# run plot
png('../../figure4.png',width = 450*width.scale, height = 300*width.scale,pointsize=16,res=300)
label_main=""
stretch<- (-1.15)
mntr.pts<-c(1,2,4,8,16,56,112)
source("plots/plots_t1e.R")
legend("right",c("Initial","Final"),lty=c(5,1))
dev.off()
source("plots/plots_t1e.R")
figure4
1E5
1E5*10
sqrt(1E6)
60/c(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60)
p.skpt     <- 0.40     # response rate for skeptic, enthusiast, futility
p.enth     <- 0.67
p.intr     <- (p.skpt+p.enth)/2
tail.skpt  <- 0.025  # tail probabilities for priors
tail.enth  <- 0.025
cred.tail  <- 0.05
sig.fut    <- 0.975
sig.eff    <- 0.975
epsilon    <- 0 # used to stop numerical error from integration
max.ss     <- 60
reps       <- 1E5
mu0.skpt <- p.skpt
mu0.enth <- p.enth
model1 <- expand.grid(1,
seq(p.skpt, p.enth, length = 25),
c(0, 1),
c(0, 1),
2,
1,
4)
model2 <- expand.grid(2,
p.skpt,
1,
0,
c(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60),
c(1, 0.25),
4)
model <- rbind(model1, model2)
names(model) <- c("model",
"p.range",
"skpt_spike",
"enth_flat",
"freq.mntr",
"enr.shape",
"out.mean")
write.csv(model, file="args_simulation.csv")
#freq.mnt=frequency of monitoring
#enr.shape=shape gamma dist enrollment
#out.mean=mean normal dist outcome
p.skpt     <- 0.40     # response rate for skeptic, enthusiast, futility
p.enth     <- 0.67
p.intr     <- (p.skpt+p.enth)/2
tail.skpt  <- 0.025  # tail probabilities for priors
tail.enth  <- 0.025
cred.tail  <- 0.05
sig.fut    <- 0.975
sig.eff    <- 0.975
epsilon    <- 0 # used to stop numerical error from integration
max.ss     <- 60
reps       <- 1E5
mu0.skpt <- p.skpt
mu0.enth <- p.enth
model1 <- expand.grid(1,
seq(p.skpt, p.enth, length = 25),
c(0, 1),
c(0, 1),
2,
1,
4)
model2 <- expand.grid(2,
p.skpt,
1,
0,
c(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60),
c(1, 0.25),
4)
model <- rbind(model1, model2)
names(model) <- c("model",
"p.range",
"skpt_spike",
"enth_flat",
"freq.mntr",
"enr.shape",
"out.mean")
write.csv(model, file="args_simulation.csv")
#freq.mnt=frequency of monitoring
#enr.shape=shape gamma dist enrollment
#out.mean=mean normal dist outcome
rm(list = ls())
# library(foreach)
# library(doParallel)
# registerDoParallel(detectCores())
# getDoParWorkers()
#
# start_time      <- Sys.time()
args_simulation <- read.csv(file="args_simulation.csv",header=TRUE,sep=",")
# foreach (idx = 1:nrow(args_simulation)) %dopar% {
if (Sys.getenv("USER") == "kwiatkoe") {
root  <-  "/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
#idx  <-  101
} else {
args <- commandArgs(trailingOnly = TRUE)
idx  <- as.numeric(args[1])
}
source("code_functions.R", local = TRUE)
source("args_model.R")
args_simulation <- read.csv(file="args_simulation.csv",header=TRUE,sep=",")
# using idx to identify model
p.range   <- args_simulation$p.range[idx]
freq.mntr <- args_simulation$freq.mntr[idx]
enr.shape <- args_simulation$enr.shape[idx]
out.mean  <- args_simulation$out.mean[idx]
if (args_simulation$skpt_spike[idx]==0){prior.nc.skpt <- skpt_prior_default()}
if (args_simulation$skpt_spike[idx]==1){prior.nc.skpt <- skpt_prior_custom(scale=0.75)}
if (args_simulation$enth_flat[idx]==0) {prior.nc.enth <- enth_prior_default()}
if (args_simulation$enth_flat[idx]==1) {prior.nc.enth <- enth_prior_custom(scale=1.5)}
source("code_main.R", local = TRUE)
Table1     <- data.frame(t(outer[,,]))
Table1$idx <- idx
write.csv(Table1,file=paste0("../output/Table1/",idx,"Table1.csv"))
Table2     <- data.frame(t(outer.p[,,]))
Table2$idx <- idx
write.csv(Table2,file=paste0("../output/Table2/",idx,"Table2.csv"))
Table3     <- data.frame(t(outer.p.agree[,,]))
Table3$idx <- idx
write.csv(Table3,file=paste0("../output/Table3/",idx,"Table3.csv"))
}
# end_time  <- Sys.time()
# diff_time <- difftime(end_time, start_time, units = "auto")
# cat("Started  ", as.character(start_time), "\n",
#     "Finished ", as.character(end_time), "\n",
#     "Time difference of ", diff_time, " ", attr(diff_time, "units"), "\n",
#     "Used ", foreach::getDoParWorkers(), " cores\n",
#     "Used ", foreach::getDoParName(), " as backend\n",
#     sep = "")
rm(list = ls())
# library(foreach)
# library(doParallel)
# registerDoParallel(detectCores())
# getDoParWorkers()
#
# start_time      <- Sys.time()
args_simulation <- read.csv(file="args_simulation.csv",header=TRUE,sep=",")
# foreach (idx = 1:nrow(args_simulation)) %dopar% {
if (Sys.getenv("USER") == "kwiatkoe") {
root  <-  "/Users/kwiatkoe/Documents/GitHub/Bayesian-Sequential-Monitoring/00-paper/FIGURES/onearm/code"
setwd(root)
#idx  <-  101
} else {
args <- commandArgs(trailingOnly = TRUE)
idx  <- as.numeric(args[1])
}
source("code_functions.R", local = TRUE)
source("args_model.R")
args_simulation <- read.csv(file="args_simulation.csv",header=TRUE,sep=",")
# using idx to identify model
p.range   <- args_simulation$p.range[idx]
freq.mntr <- args_simulation$freq.mntr[idx]
enr.shape <- args_simulation$enr.shape[idx]
out.mean  <- args_simulation$out.mean[idx]
if (args_simulation$skpt_spike[idx]==0){prior.nc.skpt <- skpt_prior_default()}
if (args_simulation$skpt_spike[idx]==1){prior.nc.skpt <- skpt_prior_custom(scale=0.75)}
if (args_simulation$enth_flat[idx]==0) {prior.nc.enth <- enth_prior_default()}
if (args_simulation$enth_flat[idx]==1) {prior.nc.enth <- enth_prior_custom(scale=1.5)}
source("code_main.R", local = TRUE)
Table1     <- data.frame(t(outer[,,]))
Table1$idx <- idx
write.csv(Table1,file=paste0("../output/Table1/",idx,"Table1.csv"))
Table2     <- data.frame(t(outer.p[,,]))
Table2$idx <- idx
write.csv(Table2,file=paste0("../output/Table2/",idx,"Table2.csv"))
Table3     <- data.frame(t(outer.p.agree[,,]))
Table3$idx <- idx
write.csv(Table3,file=paste0("../output/Table3/",idx,"Table3.csv"))
# }
# end_time  <- Sys.time()
# diff_time <- difftime(end_time, start_time, units = "auto")
# cat("Started  ", as.character(start_time), "\n",
#     "Finished ", as.character(end_time), "\n",
#     "Time difference of ", diff_time, " ", attr(diff_time, "units"), "\n",
#     "Used ", foreach::getDoParWorkers(), " cores\n",
#     "Used ", foreach::getDoParName(), " as backend\n",
#     sep = "")
